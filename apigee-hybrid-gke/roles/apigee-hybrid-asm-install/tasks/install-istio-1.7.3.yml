---
- name: Install ASM system dependencies
  become: true
  package:
    name: "{{ item }}"
    state: present
  with_items: "{{ ASM_SYSTEM_DEPENDENCIES }}"

- name: Download the SHA-256 signature of the file to the current working directory
  get_url:
    url: https://storage.googleapis.com/csm-artifacts/asm/install_asm.sha256
    dest: "{{ WORK_DIR }}/install_asm.sha256"

- name: Load SHA-256 signature from file
  set_fact:
    install_asm_sha256: "{{ lookup('file', WORK_DIR + '/install_asm.sha256') }}"

- name: Download the script to the current working directory
  get_url:
    url: https://storage.googleapis.com/csm-artifacts/asm/install_asm
    dest: "{{ WORK_DIR }}/install_asm"
    checksum: sha256:{{ install_asm_sha256.split(' ')[0] }}

- name: Validate Environment for ASM
  tags: ['validate-asm','script']
  shell: |
    bash install_asm \
      --project_id {{ PROJECT_ID }} \
      --cluster_name {{ CLUSTER_NAME }} \
      --cluster_location {{ CLUSTER_ZONE }} \
      --output_dir {{ WORK_DIR }} \
      --mode install \
      --only_validate
  args:
    chdir: "{{ WORK_DIR }}"

- name: Install ASM
  tags: ['install-asm','script']
  shell: |
    bash install_asm \
      --project_id {{ PROJECT_ID }} \
      --cluster_name {{ CLUSTER_NAME }} \
      --cluster_location {{ CLUSTER_ZONE }} \
      --output_dir {{ WORK_DIR }} \
      --mode install \
      --enable_apis
  args:
    chdir: "{{ WORK_DIR }}"

- name: Backup ASM output files with cluster name
  copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    backup: yes
  with_items:
    - { src: "{{ WORK_DIR }}/{{ ISTIO_ASM_REVISION }}-manifest-expanded.yaml", dest: "{{ WORK_DIR }}/{{ ISTIO_ASM_REVISION }}-manifest-expanded-{{ CLUSTER_NAME }}.yaml" }
    - { src: "{{ WORK_DIR }}/{{ ISTIO_ASM_REVISION }}-manifest-raw.yaml", dest: "{{ WORK_DIR }}/{{ ISTIO_ASM_REVISION }}-manifest-raw-{{ CLUSTER_NAME }}.yaml" }

- name: Clear original ASM output files
  file:
    dest: "{{ item }}"
    state: absent
  with_items:
    - "{{ WORK_DIR }}/{{ ISTIO_ASM_REVISION }}-manifest-expanded.yaml"
    - "{{ WORK_DIR }}/{{ ISTIO_ASM_REVISION }}-manifest-raw.yaml"

- name: Enable auto-injection
  shell: kubectl label namespace {{ AUTO_INJECTION_NAMESPACE }} istio.io/rev={{ ISTIO_ASM_REVISION }} istio-injection- --overwrite

- name: Restart the Pods to trigger re-injection
  shell: kubectl rollout restart deployment -n apigee