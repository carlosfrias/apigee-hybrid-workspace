---
- name: Create infrastructure for private cloud in GCP
  hosts: localhost
  connection: local

  vars:
    ORG_ID: "441697784715"
    ARGOLIS_BILLING_ID: "01761B-1E12F2-917D22"
    ##################
    BILLING_ID: "{{ ARGOLIS_BILLING_ID }}"
    ##################
    PROJECT_ID: "frias-pca-09222021-1023"
    WORK_DIR: "{{ playbook_dir }}/work_dir/{{ PROJECT_ID }}"
    TOOLS_DIR: "{{ ansible_user_dir }}/bin"
    GCLOUD_ACCOUNT_USER: "admin"
    GCLOUD_ACCOUNT_DOMAIN: "friasc.altostrat.com"
    GCLOUD_ACCOUNT_EMAIL: "{{ GCLOUD_ACCOUNT_USER }}@{{ GCLOUD_ACCOUNT_DOMAIN }}"
    GCLOUD_ACCOUNT_ADMIN_USER: "admin"
    GCLOUD_ACCOUNT_ADMIN_EMAIL: "{{ GCLOUD_ACCOUNT_ADMIN_USER }}@{{ GCLOUD_ACCOUNT_DOMAIN }}"
    GCLOUD_ACCOUNT_BILLING_ADMIN_USER: "admin"
    GCLOUD_ACCOUNT_BILLING_ADMIN_EMAIL: "{{ GCLOUD_ACCOUNT_BILLING_ADMIN_USER }}@{{ GCLOUD_ACCOUNT_DOMAIN }}"

    SERVICE_ACCOUNT_NAME: "service-account-default"
    SERVICE_ACCOUNT_FILE_SUFFIX: service-account-key
    SERVICE_ACCOUNT: "{{ SERVICE_ACCOUNT_NAME }}@{{ PROJECT_ID }}.iam.gserviceaccount.com"
    SERVICE_ACCOUNT_ROLE_BINDINGS:
      - "roles/compute.admin"
      - "roles/compute.networkUser"
      - "roles/compute.instanceAdmin"
      - "roles/networkmanagement.admin"
      - "roles/networkmanagement.viewer"
      - "roles/iam.serviceAccountUser"
      - "roles/iam.serviceAccountAdmin"
      - "roles/iam.serviceAccountCreator"
      - "roles/iam.serviceAccountKeyAdmin"
      - "roles/compute.loadBalancerAdmin"
      - "roles/resourcemanager.organizationAdmin"
      - "roles/resourcemanager.projectDeleter"
      - "roles/resourcemanager.projectCreator"
      - "roles/editor"

    ORG_ROLE_BINDINGS:
      - "roles/billing.admin"
      - "roles/billing.projectManager"
      - "roles/iam.serviceAccountAdmin"
      - "roles/iam.serviceAccountKeyAdmin"
      - "roles/owner"
      - "roles/resourcemanager.projectCreat0r"
      - "roles/resourcemanager.projectDeleter"
      - "roles/resourcemanager.projectIamAdmin"
      - "roles/serviceusage.serviceUsageAdmin"
      - "roles/serviceusage.serviceUsageViewer"
      - "roles/serviceusage.apiKeysAdmin"
      - "roles/iam.serviceAccountKeyAdmin"
      - "roles/iam.serviceAccountAdmin"
      - "roles/resourcemanager.organizationAdmin"
      - "roles/iap.tunnelResourceAccessor"

#  vars_files:
#    - attributes.yml
#    - ~/.apigee-secure/apigee-hybrid-sensitive-attributes.yml

  collections:
    - bap_coe.gcp_management
    - bap_coe.bootstrap_runtime

  roles:
    - { role: gcp_project_create, tags: [ 'project' ] }
    - { role: gcp_iam_policy_bindings_org, tags: ['org-roles'] }
    - { role: gcp_iam_service_account_create, tags: [ 'service-account','roles','firewall'] }
    - { role: gcp_iam_service_account_keys, tags: [ 'keys','roles','firewall'] }
    - { role: gcp_project_services_enable, tags: ['services'] }
    - { role: gcp_iam_policy_bindings_service_account, tags: ['roles'] }
#    - { role: gce_network_create }
#    - { role: gce_firewall_create }
#    - { role: gce_instance_create, tags: ['instance'], TARGET_TAGS: ['allow-ssh'], ACCESS_TYPE: "int" }
#    - { role: gce_dynamic_inventory_configure, tags: ['inventory'] }

#  tasks:
#  - name: Create default VPC Network
#    ignore_errors: yes
#    shell: |
#      gcloud compute networks create {{ NETWORK_NAME | default('default') }} \
#        --bgp-routing-mode=global
#
#  - name: Create SSH FW rule for the control server
#    shell: |
#      gcloud compute firewall-rules create {{ FW_RULE_NAME | default('allow-ssh-from-iap') }} \
#        --project={{ PROJECT_ID }} \
#        --source-ranges=35.235.240.0/20 \
#        --allow=tcp
#
#  - name: Create control server
#    shell: |
#      gcloud compute instances create {{ CONTROL_SERVER_IMAGE_NAME }} \
#        --zone {{ GCP_ZONE }} \
#        --service-account {{ SERVICE_ACCOUNT }} \
#        --shielded-secure-boot \
#        --network=default \
#        --no-address
#
#  - name: Remove image
#    community.docker.docker_image:
#      state: absent
#      force_absent: yes
#      name: "{{ CONTROL_SERVER_IMAGE_NAME }}"

#  - name: Build image
#    community.docker.docker_image:
#      name: "{{ CONTROL_SERVER_IMAGE_REPO_PATH }}"
#      source: build
#      state: present
#      build:
#        nocache: yes
#        rm: yes
#        path: .

#  - name: Create control server
#    shell: |
#      gcloud compute instances create-with-container {{ CONTROL_SERVER_IMAGE_NAME }} \
#        --zone {{ GCP_ZONE }} \
#        --service-account {{ SERVICE_ACCOUNT }} \
#        --container-image {{ CONTROL_SERVER_IMAGE_REPO_PATH }} \
#        --shielded-secure-boot \
#        --no-address

#- name: Update runtime environment of instances
#  hosts: edge
#  gather_facts: yes
#  tags: ['python','infra']
#
#  collections:
#    - bap_coe.bootstrap_runtime
#
#  roles:
#    - python_install_minimal
