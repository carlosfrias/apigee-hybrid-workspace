---
#ANSIBLE_PYTHON_INTERPRETER: /usr/local/google/home/friasc/.pyenv/shims/python3
TERRAFORM_PROJECT_NAME: "x-dns-peering"
PROJECT_ID: "friasc-{{ TERRAFORM_PROJECT_NAME}}-04052022-1042"
WORK_DIR: "{{ playbook_dir }}/work_dir/{{ PROJECT_ID }}"
TOOLS_DIR: "{{ ansible_user_dir }}/bin"
INVENTORY_DIR: "{{ playbook_dir }}/inventory"

GITHUB_REPO_URL: git@github.com:carlosfrias/terraform-modules.git
GITHUB_REPO_DEST: "/usr/local/google/home/friasc/apigee-workspace/apigee-hybrid-workspace/bap_coe/google_terraform_provider/playbooks/terraform-modules"
TERRAFORM_PROJECT_PATH: "{{ GITHUB_REPO_DEST }}/samples/{{ TERRAFORM_PROJECT_NAME }}"
TERRAFORM_BIN_DEST_PATH: "{{ TERRAFORM_PROJECT_PATH }}"
TERRAFORM_BIN_PATH: "{{ TERRAFORM_BIN_DEST_PATH }}/terraform"

NAME_INSTANCE_PREFIX: apigee-x
GCP_ZONE: us-east1-b
GCP_REGION: us-east1
CONTROL_SERVER_IMAGE_NAME: ops-server
CONTROL_SERVER_IMAGE_REPO_PATH: gcr.io/friasc-lab/{{ CONTROL_SERVER_IMAGE_NAME }}
ORG_BINDING_PROPAGATION_TIMEOUT: 100
ACCESS_TYPE: int
#TIME_TO_PROPAGATE_BINDINGS: 20

AUTHORIZATION_KIND: serviceaccount
RESOURCE_GCP_ZONE: "us-central1-c"
MACHINE_TYPE: f1-micro
#MACHINE_TYPE: n1-standard-1
#MACHINE_TYPE: n2-highcpu-2
SCOPE_COMPUTE: "https://www.googleapis.com/auth/compute"
INSTANCE_NETWORK_TAG: "{{ NAME_INSTANCE_PREFIX }}-network-tag"

# Additional values for IMAGE_PROJECT: 'centos-cloud'
# Additional values for IMAGE_FAMILY: 'centos-7'
DISK_SOURCE_IMAGE: "projects/{{ IMAGE_PROJECT | default('ubuntu-os-cloud') }}/global/images/family/{{ IMAGE_FAMILY | default('ubuntu-1804-lts') }}"
DISK_NAME: "{{ NAME_INSTANCE_PREFIX }}-disk"
DISK_SIZE: 100

STARTUP_SCRIPT: |
  sudo apt update -y
  sudo apt install -y build-essential libssl-dev git zlib1g-dev
  sudo git clone https://github.com/giltene/wrk2.git /usr/local/src/wrk
  cd /usr/local/src/wrk
  make
  sudo cp /usr/local/src/wrk /usr/local/bin/

FOLDER_ROLE_BINDINGS:
- roles/resourcemanager.folderAdmin

FOLDER_DISPLAY_NAME: apigeex

ORG_ROLE_BINDINGS:
- "roles/billing.admin"
- "roles/billing.projectManager"
- "roles/iam.serviceAccountAdmin"
- "roles/iam.serviceAccountKeyAdmin"
- "roles/resourcemanager.projectIamAdmin"
- "roles/resourcemanager.organizationAdmin"
- "roles/serviceusage.serviceUsageAdmin"
- "roles/serviceusage.serviceUsageViewer"
- "roles/serviceusage.apiKeysAdmin"
- "roles/iap.tunnelResourceAccessor"

#  Configure project admin role bindings
PROJECT_ADMIN_ROLE_BINDINGS:
- "roles/resourcemanager.projectDeleter"
- "roles/resourcemanager.projectCreator"

GCP_SERVICES:
- "compute.googleapis.com"
- "apigee.googleapis.com"
- "servicenetworking.googleapis.com"
#- "cloudresourcemanager.googleapis.com"
#- "serviceusage.googleapis.com"
#- "iam.googleapis.com"
#- "container.googleapis.com"
#- "stackdriver.googleapis.com"
#- "meshca.googleapis.com"
#- "meshtelemetry.googleapis.com"
#- "meshconfig.googleapis.com"
#- "iamcredentials.googleapis.com"
#- "anthos.googleapis.com"
#- "gkeconnect.googleapis.com"
#- "gkehub.googleapis.com"
#- "sourcerepo.googleapis.com"
#- "cloudbuild.googleapis.com"
#- "secretmanager.googleapis.com"
#- "dns.googleapis.com"
#- "pubsub.googleapis.com"
#- "apigeeconnect.googleapis.com"
#- "monitoring.googleapis.com"
#- "logging.googleapis.com"
#- "cloudtrace.googleapis.com"
#- "privateca.googleapis.com"

SERVICE_ACCOUNT_ROLE_BINDINGS:
- "roles/compute.admin"
- "roles/compute.networkUser"
- "roles/compute.instanceAdmin"
#- "roles/networkmanagement.admin"
#- "roles/networkmanagement.viewer"
#- "roles/iam.serviceAccountUser"
#- "roles/iam.serviceAccountAdmin"
#- "roles/iam.serviceAccountCreator"
#- "roles/iam.serviceAccountKeyAdmin"
#- "roles/compute.loadBalancerAdmin"

firewall_ports:
- { allow_ports: ['22'], port_name_suffix: 'control-server' }

CONSTRAINTS_DISABLE_ENFORCEMENT:
- iam.disableServiceAccountKeyCreation
- iam.disableServiceAccountCreation
- compute.requireShieldedVm
- compute.requireOsLogin
#- compute.trustedImageProjects
#- compute.restrictSharedVpcSubnetworks
#- compute.restrictSharedVpcHostProjects
#- compute.restrictVpcPeering
#- compute.vmExternalIpAccess

KEY_VALUE_PAIRS:
  - { key: "project_path", value: "{{ TERRAFORM_PROJECT_PATH }}", separator: ":", file_name: "{{ TERRAFORM_PROJECT_PATH }}/x-demo.tfvars" }
  - { key: "binary_path", value: "{{ TERRAFORM_BIN_PATH }}", separator: ":", file_name: "{{ TERRAFORM_PROJECT_PATH }}/x-demo.tfvars" }
  - { key: "project_id", value: "{{ PROJECT_ID }}", separator: ":", file_name: "{{ TERRAFORM_PROJECT_PATH }}/x-demo.tfvars" }
  - { key: "ax_region", value: "{{ GCP_ZONE }}", separator: ":", file_name: "{{ TERRAFORM_PROJECT_PATH }}/x-demo.tfvars" }
  - { key: "apigee_environments", value: "['test1','test2']", separator: ":", file_name: "{{ TERRAFORM_PROJECT_PATH }}/x-demo.tfvars" }
  - { key: "region", value: "{{ GCP_REGION }}", separator: ":", file_name: "{{ TERRAFORM_PROJECT_PATH }}/x-demo.tfvars" }
  - { key: "ip_range", value: "10.2.0.0/22", separator: ":", file_name: "{{ TERRAFORM_PROJECT_PATH }}/x-demo.tfvars" }
  - { key: "environments", value: '["test1","test2"]', separator: ":", file_name: "{{ TERRAFORM_PROJECT_PATH }}/x-demo.tfvars" }
  - { key: "hostnames", value: '["test.api.example.com"]', separator: ":", file_name: "{{ TERRAFORM_PROJECT_PATH }}/x-demo.tfvars" }
  - { key: "network", value: "apigee-network", separator: ":", file_name: "{{ TERRAFORM_PROJECT_PATH }}/x-demo.tfvars" }
  - { key: "name", value: "apigee-exposure", separator: ":", file_name: "{{ TERRAFORM_PROJECT_PATH }}/x-demo.tfvars" }
  - { key: "ip_cidr_range", value: "10.100.0.0/24", separator: ":", file_name: "{{ TERRAFORM_PROJECT_PATH }}/x-demo.tfvars" }
  - { key: "secondary_ip_range", value: "null", separator: ":", file_name: "{{ TERRAFORM_PROJECT_PATH }}/x-demo.tfvars" }
  - { key: "peering_range", value: "10.0.0.0/22", separator: ":", file_name: "{{ TERRAFORM_PROJECT_PATH }}/x-demo.tfvars" }
  - { key: "support_range", value: "10.1.0.0/28", separator: ":", file_name: "{{ TERRAFORM_PROJECT_PATH }}/x-demo.tfvars" }
