---
# tasks file for terraform-destroy
- name: Assert terraform log folder exists
  file:
    path: "{{ TERRAFORM_LOG_PATH }}"
    state: directory

- name: Assert terraform log file exists
  file:
    path: "{{ item }}"
    state: touch
  with_items:
  - "{{ TERRAFORM_LOG_FILE_NAME_DESTROY_PATH }}"

- name: Terraform destroy
  ignore_errors: True
  shell: |
    {{ TERRAFORM_PATH_BIN }} destroy --var-file={{ TERRAFORM_PATH_PROJECT }}/x-demo.tfvars -auto-approve
  args:
    chdir: "{{ TERRAFORM_PATH_PROJECT }}"
  environment:
    TF_LOG: "{{ TERRAFORM_LOG }}"
    TF_LOG_PATH: "{{ TERRAFORM_LOG_FILE_NAME_DESTROY_PATH }}"

- name: Remove old WORK_DIR
  ignore_errors: True
  file:
    path: "{{ item }}"
    state: absent
  with_items:
  - "{{ TERRAFORM_PATH_PROJECT }}/.terraform"
  - "{{ TERRAFORM_PATH_PROJECT }}/.terraform.lock.hcl"
  - "{{ TERRAFORM_PATH_PROJECT }}/terraform.tfstate"
  - "{{ TERRAFORM_PATH_PROJECT }}/terraform.tfstate.backup"
