---
# tasks file for terraform_apply
- name: Assert terraform log folder exists
  file:
    path: "{{ TERRAFORM_LOG_PATH | dirname }}"
    state: directory

- name: Assert terraform log file exists
  file:
    path: "{{ TERRAFORM_LOG_PATH }}"
    state: touch

- name: Terraform apply with extra variables
  shell: |
    {{ TERRAFORM_PATH_BIN }}/terraform apply --var-file={{ TERRAFORM_VAR_FILE_PATH }} -auto-approve
  args:
    chdir: "{{ TERRAFORM_PATH_PROJECT }}"
  environment:
    TF_LOG: "{{ TERRAFORM_LOG_LEVEL }}"
    TF_LOG_PATH: "{{ TERRAFORM_LOG_PATH }}"
  when: TERRAFORM_VAR_FILE_PATH is defined
  register: apply_output

- name: Terraform apply
  shell: |
    {{ TERRAFORM_PATH_BIN }}/terraform apply -auto-approve
  args:
    chdir: "{{ TERRAFORM_PATH_PROJECT }}"
  environment:
    TF_LOG: "{{ TERRAFORM_LOG_LEVEL }}"
    TF_LOG_PATH: "{{ TERRAFORM_LOG_PATH }}"
  when: TERRAFORM_VAR_FILE_PATH is not defined
  register: apply_output

- name: Capture terraform output
  command: "{{ TERRAFORM_PATH_BIN }}/terraform output"
  args:
    chdir: "{{ TERRAFORM_PATH_PROJECT }}"
  environment:
    TF_LOG: "{{ TERRAFORM_LOG_LEVEL }}"
    TF_LOG_PATH: "{{ TERRAFORM_LOG_PATH }}"
  when: TERRAFORM_VAR_FILE_PATH is not defined
  register: tf_output

- name: Show terraform output
  debug:
    var: tf_output

