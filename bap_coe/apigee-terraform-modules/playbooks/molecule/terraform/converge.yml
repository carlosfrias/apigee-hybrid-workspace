---
- name: Create Apigee runtime on GCP
  hosts: localhost
  connection: local

  vars_files:
  - ~/.apigee-secure/apigee-hybrid-sensitive-attributes.yml
  - "{{ playbook_dir | dirname }}/shared/attributes.yml"

  collections:
  - bap_coe.bootstrap_runtime
  - bap_coe.gcp_management

  roles:
    - { role: terraform_installer }
    - { role: service_account_file_path }
    - { role: service_account_file_processing }
    - { role: gcp_auth_service_account_activate }

  tasks:
  - name: Assert terraform log folder exists
    file:
      path: "{{ TERRAFORM_LOG_PATH }}"
      state: directory

  - name: Assert terraform log file exists
    file:
      path: "{{ TERRAFORM_LOG_PATH }}/{{ TERRAFORM_LOG_FILE_NAME }}"
      state: touch

  - name: Terraform init
    shell: |
      {{ TERRAFORM_PATH_BIN }} init
    args:
      chdir: "{{ TERRAFORM_PATH_PROJECT }}"
    environment:
      TERRAFORM_LOG: "{{ TERRAFORM_LOG }}"
      TERRAFORM_LOG_PATH: "{{ TERRAFORM_LOG_PATH }}/{{ TERRAFORM_LOG_FILE_NAME }}"

  - name: Terraform plan
    shell: |
      {{ TERRAFORM_PATH_BIN }} plan --var-file={{ TERRAFORM_PATH_PROJECT }}/x-demo.tfvars -var "project_id={{ PROJECT_ID }}"
    args:
      chdir: "{{ TERRAFORM_PATH_PROJECT }}"
    environment:
      TERRAFORM_LOG: "{{ TERRAFORM_LOG }}"
      TERRAFORM_LOG_PATH: "{{ TERRAFORM_LOG_PATH }}/{{ TERRAFORM_LOG_FILE_NAME }}"

  - name: Terraform apply
    shell: |
      {{ TERRAFORM_PATH_BIN }} apply --var-file={{ TERRAFORM_PATH_PROJECT }}/x-demo.tfvars -auto-approve -var "project_id={{ PROJECT_ID }}"
    args:
      chdir: "{{ TERRAFORM_PATH_PROJECT }}"
    environment:
      TERRAFORM_LOG: "{{ TERRAFORM_LOG }}"
      TERRAFORM_LOG_PATH: "{{ TERRAFORM_LOG_PATH }}/{{ TERRAFORM_LOG_FILE_NAME }}"

