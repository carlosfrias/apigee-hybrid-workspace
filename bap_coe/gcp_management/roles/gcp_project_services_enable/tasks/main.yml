---
# tasks file for roles/gcp_project_services_enable
- name: Assert that GCP services list is available
  assert:
    that:
      - GCLOUD_PROJECT_SERVICES is defined
    msg: "Please provide GCLOUD_PROJECT_SERVICES collection with list of services to enable."

- name: Assert that ADMIN_ACCOUNT_EMAIL list is available
  assert:
    that:
      - ADMIN_ACCOUNT_EMAIL is defined
    msg: "Please provide ADMIN_ACCOUNT_EMAIL collection with list of services to enable."

- name: Assert that the PROJECT_ID is available
  assert:
    that:
      - PROJECT_ID is defined
    msg: "Please provide the PROJECT_ID"

- name: Set GCP Services List
  set_fact:
    GCLOUD_PROJECT_SERVICES: "{{ GCLOUD_PROJECT_SERVICES }}"

- name: Assert SERVICE_OP
  assert:
    that:
      - SERVICE_OP is defined
    msg: "Please indicate the SERVICE_OP, should be either 'enable' or 'disable'"

- name: Enable GCP APIs
  #  this is now also done in the install_asm bash script.
  #  This is required here before the install_asm requires it.
  shell: gcloud services {{ SERVICE_OP }} {{ GCLOUD_PROJECT_SERVICES | join(' ') }} --project {{ PROJECT_ID }} --account {{ ADMIN_ACCOUNT_EMAIL }}
#  with_items: "{{ GCLOUD_PROJECT_SERVICES }}"
  when: SERVICE_OP == 'enable'

- name: Disable GCP APIs
  #  this is now also done in the install_asm bash script.
  #  This is required here before the install_asm requires it.
  shell: gcloud services {{ SERVICE_OP }} {{ GCLOUD_PROJECT_SERVICES | join(' ') }} --project {{ PROJECT_ID }} --account {{ ADMIN_ACCOUNT_EMAIL }} --force
#  with_items: "{{ GCLOUD_PROJECT_SERVICES }}"
  when: SERVICE_OP == 'disable'

