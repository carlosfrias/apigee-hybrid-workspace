---
- name: Enable apikeys service
  shell: gcloud services enable apikeys.googleapis.com --project {{ PROJECT_ID }}

- name: Grant role roles/serviceusage.apiKeysAdmin to Admin Service Account
  shell: |
    gcloud projects add-iam-policy-binding {{ PROJECT_ID }} \
    --member="serviceAccount:{{ ADMIN_SERVICE_ACCOUNT }}" \
    --role=roles/serviceusage.apiKeysAdmin

- name: Create an API key
  uri:
    url: https://apikeys.googleapis.com/v2/projects/{{ PROJECT_ID }}/locations/global/keys
    method: POST
    headers:
      Authorization: Bearer {{ GCLOUD_TOKEN }}
    body:
      display_name: "apigee-apikey"
    body_format: json
  register: apikey_status

#- name: Record operation id
#  set_fact:
#    LONG_RUNNING_OPERATION_ID: "{{ apikey_status.json.name | urlsplit('path') | basename }}"
#  when: apikey_status.json.name is defined

- name: Poll for the API key
  uri:
    url: https://apikeys.googleapis/v2/{{ apikey_status.json.name }}?name=apigee-apikey
    headers:
      Authorization: Bearer {{ GCLOUD_TOKEN }}
  register: operation_status
#  until: operation_status.json.metadata.state == "FINISHED"
#  poll: 5
#  retries: 50
#  async: 90
#  when: apikey_status.json.name is defined

- name: Download API Keys
  uri:
    url: https://apikeys.googleapis.com/v2/projects/{{ PROJECT_ID }}/locations/global/keys
    headers:
      Authorization: Bearer {{ GCLOUD_TOKEN }}
    body_format: json
  register: apikeys

- name: Store cache
  set_fact:
    cachable: true
    API_KEY: "{{ apikeys.json }}"

- name: Store APIKeys
  copy:
    content: "{{ API_KEY }}"
    dest: "{{ GCP_APIKEY_FILE_PATH }}"
