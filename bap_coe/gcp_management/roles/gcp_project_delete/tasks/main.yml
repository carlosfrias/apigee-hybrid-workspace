---
# tasks file for gcp_project_delete
- name: Assert GCLOUD_ACCOUNT_EMAIL
  assert:
    that:
    - GCLOUD_ACCOUNT_EMAIL is defined
    msg: "GCLOUD_ACCOUNT_EMAIL must contain the GCP account email"

- name: Set active account
  shell: gcloud config set account {{ GCLOUD_ACCOUNT_EMAIL }}

- name: Delete Cloud Repository for GCP Project
  ignore_errors: true
  shell: gcloud source repos delete config-repo --project {{ PROJECT_ID }}

- name: Delete GCP project
  ignore_errors: true
  shell: gcloud projects delete {{ PROJECT_ID }} --account {{ GCLOUD_ACCOUNT_EMAIL }} --quiet

- name: Assert that WORK_DIR is set and available for removal
  stat:
    path: "{{ WORK_DIR | default('') }}"
  register: work_dir_path

- name: Delete WORK_DIR folder
  file:
    path: "{{ work_dir_path.stat.path }}/"
    state: absent
  when: work_dir_path.stat.exists

- name: Assert that inventory exists in anticipation of folder removal
  stat:
    path: "{{ playbook_dir }}/inventory"
  register: status

- name: Delete inventory folder removal
  file:
    path: "{{ playbook_dir }}/inventory"
    state: absent
  when: status.stat.exists is defined and status.stat.exists is true

