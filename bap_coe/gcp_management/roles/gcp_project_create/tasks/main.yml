---
# tasks file for gcp_project_create
- name: Assert GCLOUD_ACCOUNT_ADMIN_EMAIL
  assert:
    that:
      - GCLOUD_ACCOUNT_ADMIN_EMAIL is defined
    msg: "GCLOUD_ACCOUNT_ADMIN_EMAIL must contain the GCP account email"

- name: Assert PROJECT_ID
  assert:
    that:
      - PROJECT_ID is defined
    msg: "PROJECT_ID must be provided."

- name: Advise status BILLING_ID
  pause:
    echo: "Please note that BILLING_ID has not been provided"
    seconds: 2
  when: BILLING_ID is undefined

- name: Advise status GCLOUD_ACCOUNT_BILLING_ADMIN_EMAIL
  pause:
    echo: "Please note that CLOUD_ACCOUNT_BILLING_ADMIN_EMAIL has not been provided"
    seconds: 2
  when: GCLOUD_ACCOUNT_BILLING_ADMIN_EMAIL is undefined

- name: Construct base project create command
  set_fact:
    cacheable: yes
    GCLOUD_PROJECT_CREATE_CMD: "gcloud projects create {{ PROJECT_ID }} --account {{ GCLOUD_ACCOUNT_EMAIL }}"

- name: Add FOLDER_ID if provided to base project create command
  set_fact:
    cacheable: yes
    GCLOUD_PROJECT_CREATE_CMD: "{{ GCLOUD_PROJECT_CREATE_CMD }} --organization={{ FOLDER_ID }}"
  when: FOLDER_ID is defined

#- name: Set active account
#  shell: gcloud config set account {{ GCLOUD_ACCOUNT_ADMIN_EMAIL }}

- name: Create GCP Project with provided FOLDER_ID
  shell: "{{ GCLOUD_PROJECT_CREATE_CMD }}"
  register: status
  failed_when:
  - status.rc == 1
  - "'already in use' not in status.stderr"

- name: Set Project Default
  shell: gcloud config set project {{ PROJECT_ID }}

- name: Connect GCP Project to Billing Account, if provided
  shell: gcloud alpha billing projects link {{ PROJECT_ID }} --billing-account {{ BILLING_ID }} --account {{ GCLOUD_ACCOUNT_BILLING_ADMIN_EMAIL }}
  when: BILLING_ID is defined and GCLOUD_ACCOUNT_BILLING_ADMIN_EMAIL is defined

- name: Obtain PROJECT_NUMBER
  shell: gcloud projects describe {{ PROJECT_ID }} --format="value(projectNumber)"
  register: project_number

- name: Cache PROJECT_NUMBER
  set_fact:
    cacheable: yes
    PROJECT_NUMBER: "{{ project_number.stdout }}"
