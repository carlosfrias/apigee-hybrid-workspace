---
# tasks file for roles/gcp_iam_service_account_key_generation
- name: Assert that the PROJECT_ID is available
  assert:
    that:
    - PROJECT_ID is defined
    msg: "Please provide the PROJECT_ID"

- name: Assert that the KEY_FILE_PATH is available
  assert:
    that:
    - KEY_FILE_PATH is defined
    msg: "Please provide the KEY_FILE_PATH"

- name: Remove existing key files if present
  file:
    path: "{{ KEY_FILE_PATH }}/{{ item }}-{{ SERVICE_ACCOUNT_FILE_SUFFIX }}.json"
    state: absent
  loop: "{{ SERVICE_ACCOUNTS }}"

- name: Assert KEY_FILE_PATH directory
  file:
    path: "{{ KEY_FILE_PATH }}"
    state: directory

- name: Create initial service account key file, if not there
  shell: |
    gcloud iam service-accounts keys create {{ KEY_FILE_PATH }}/{{ item }}-{{ SERVICE_ACCOUNT_FILE_SUFFIX }}.json \
      --iam-account={{ item }}{{ PROJECT_SERVICE_ACCOUNT_FQ_NAME_SUFFIX }} \
      --project {{ PROJECT_ID }} \
      --account {{ ADMIN_ACCOUNT_EMAIL }}
  args:
    creates: "{{ KEY_FILE_PATH }}/{{ item }}-{{ SERVICE_ACCOUNT_FILE_SUFFIX }}.json"
  loop: "{{ SERVICE_ACCOUNTS }}"

- name: Assert file is visible
  file:
    path: "{{ KEY_FILE_PATH }}/{{ item }}-{{ SERVICE_ACCOUNT_FILE_SUFFIX }}.json"
    mode: "u=rw,g=r,o=r"
    state: file
  loop: "{{ SERVICE_ACCOUNTS }}"