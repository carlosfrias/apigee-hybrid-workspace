---
# tasks file for gce_instance_create
- name: Assert use of next_count if set
  set_fact:
    current_node_count: "{{ next_count | default(sequence) }}"

- name: Assert current_node_count over INSTANCE_COUNT_START if set
  set_fact:
    current_node_count: "{{ current_node_count | default(INSTANCE_COUNT_START) }}"
    ACCESS_TYPE: "{{ ACCESS_TYPE | default('ext') }}"

- name: create a disk
  gcp_compute_disk:
    name: '{{ DISK_NAME }}-{{ current_node_count }}'
    size_gb: "{{ DISK_SIZE | default(50) }}"
    source_image: '{{ DISK_SOURCE_IMAGE }}'
    zone: "{{ GCP_ZONE }}"
    project: "{{ PROJECT_ID }}"
    auth_kind: "{{ AUTHORIZATION_KIND | default('serviceaccount') }}"
    service_account_file: "{{ SERVICE_ACCOUNT_FILE_PATH }}"
    scopes: "{{ SCOPE_COMPUTE }}"
    state: present
  register: disk_config

- name: Assert ACCESS_TYPE contains the correct value
  assert:
    that:
      - ACCESS_TYPE == "ext" or ACCESS_TYPE == "int"
    fail_msg: "ACCESS_TYPE must be set to either 'ext' or 'int'"

- block:
  - name: create an externally accessible instance
    gcp_compute_instance:
      name: "{{ NAME_INSTANCE_PREFIX }}-{{ current_node_count }}"
      state: present
      machine_type: "{{ MACHINE_TYPE }}"
      disks:
      - auto_delete: true
        boot: true
        source: "{{ disk_config }}"
      network_interfaces:
      - network: "{{ VPC_NETWORK_INFO }}"
        access_configs:
        - name: 'External NAT'
          type: 'ONE_TO_ONE_NAT'
      zone: "{{ GCP_ZONE }}"
      project: "{{ PROJECT_ID }}"
      auth_kind: "{{ AUTHORIZATION_KIND | default('serviceaccount') }}"
      service_account_file: "{{ SERVICE_ACCOUNT_FILE_PATH }}"
      metadata:
        'startup-script': |
          {{ STARTUP_SCRIPT | default('') }}
      scopes: "{{ SCOPE_COMPUTE }}"
      tags:
        items:
          - "{{ NETWORK_TAGS }}"
    register: gce_instance

  - name: Store GCE Instance Ext IP Address
    set_fact:
      cacheable: yes
      gce_instance_ext_IP: "{{ gce_instance.networkInterfaces[0].accessConfigs[0].natIP }}"
      gce_instance_ext_name: "{{ gce_instance.name }}"
  when: ACCESS_TYPE == "ext"

- name: create an internally only accessible instance
  gcp_compute_instance:
    name: "{{ NAME_INSTANCE_PREFIX }}-{{ current_node_count }}"
    state: present
    machine_type: "{{ MACHINE_TYPE }}"
    disks:
    - auto_delete: true
      boot: true
      source: "{{ disk_config }}"
    network_interfaces:
    - network: "{{ network_config }}"
    zone: "{{ GCP_ZONE }}"
    project: "{{ PROJECT_ID }}"
    auth_kind: "{{ AUTHORIZATION_KIND | default('serviceaccount') }}"
    service_account_file: "{{ SERVICE_ACCOUNT_FILE_PATH }}"
    tags:
      items:
      - "{{ TARGET_TAGS }}"
    metadata:
      'startup-script': |
        {{ STARTUP_SCRIPT | default('') }}
    scopes: "{{ SCOPE_COMPUTE }}"
  register: gce_instance_int
  poll: 0
  async: 300
  when: ACCESS_TYPE == "int"

- name: Refreshing SSH
  command: "echo 'Refreshing GCP Compute SSH Config'"
  notify: "refresh gcp compute ssh config"
