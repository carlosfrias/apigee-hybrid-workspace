---
# tasks file for load_product_developers_apps
- name: Assert GCLOUD_TOKEN is provided
  assert:
    that:
      - GCLOUD_TOKEN is defined
    msg: Please provide the bearer token from gcloud. (You can use gcp_token_retrieval role)

- name: Assert API_KEY is provided
  assert:
    that:
      - API_KEY is defined
    msg: Please provide the API_KEY. (https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.apiproducts/create)

- name: Assert ORG is provided
  assert:
    that:
      - ORG is defined
    msg: Please provide the organiztion name.

- name: Set defaults for attributes not provided
  set_fact:
    APIGEE_API_URI: "{{ APIGEE_API_URI | default('https://apigee.googleapis.com') }}"
    PRODUCT_NAME: "{{ PRODUCT_NAME | default('Sample-Product') }}"
    PRODUCT_DISPLAY_NAME: "{{ PRODUCT_DISPLAY_NAME | default('Sample-Product') }}"
    PRODUCT_APPROVAL_TYPE: "{{ PRODUCT_APPROVAL_TYPE | default('auto') }}"
    PRODUCT_ENV: "{{ PRODUCT_ENV | default('test') }}"
    API_PROXY_NAME: "{{ API_PROXY_NAME | default('notarget') }}"
    PRODUCT_QUOTA: "{{ PRODUCT_QUOTA | default(1000) }}"
    PRODUCT_QUOTA_INTERVAL: "{{ PRODUCT_QUOTA_INTERVAL | default(1) }}"
    PRODUCT_QUOTA_TIME_UNIT: "{{ PRODUCT_QUOTA_TIME_UNIT | default('hour') }}"
    DEVELOPER_EMAIL_ACCOUNT: "{{ DEVELOPER_EMAIL_ACCOUNT | default('joe.developer') }}"
    DEVELOPER_EMAIL_DOMAIN: "{{ DEVELOPER_EMAIL_DOMAIN | default('google.com') }}"
    DEVELOPER_FIRST_NAME: "{{ DEVELOPER_FIRST_NAME | default('joe') }}"
    DEVELOPER_LAST_NAME: "{{ DEVELOPER_LAST_NAME | default('developer') }}"
    DEVELOPER_USER_NAME: "{{ DEVELOPER_USER_NAME | default('developerjoe') }}"
    START_POSITION: "{{ START_POSITION | default(1) }}"
    LOAD_COUNT: "{{ LOAD_COUNT | default(1000) }}"
    APP_NAME: "{{ APP_NAME | default('sample-app') }}"
    APP_STATUS: "{{ APP_STATUS | default('active') }}"
    APP_FAMILY: "{{ APP_FAMILY | default('sample-app-family') }}"

#  Create Product - https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.apiproducts/create
- name: Create Product
  uri:
    url: "{{ APIGEE_API_URI | default('https://apigee.googleapis.com') }}/v1/organizations/{{ ORG }}/apiproducts?key={{ API_KEY }}"
    method: POST
    status_code: ['200','201','409']
    headers:
      Authorization: Bearer {{ GCLOUD_TOKEN }}
    body_format: json
    body:
      name: "{{ PRODUCT_NAME }}"
      displayName: "{{ PRODUCT_DISPLAY_NAME }}"
      approvalType: "{{ PRODUCT_APPROVAL_TYPE }}"
      environments: [
          "{{ PRODUCT_ENV }}"
      ]
      proxies: [
          "{{ API_PROXY_NAME }}"
      ]
      quota: "{{ PRODUCT_QUOTA }}"
      quotaInterval: "{{ PRODUCT_QUOTA_INTERVAL }}"
      quotaTimeUnit: "{{ PRODUCT_QUOTA_TIME_UNIT }}"

# Create Developer - https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.developers/create
- name: Create Developers
  uri:
    url: "{{ APIGEE_API_URI }}/v1/organizations/{{ ORG }}/developers"
    method: POST
    status_code: [ '200','201','409']
    headers:
      Authorization: Bearer {{ GCLOUD_TOKEN }}
    body_format: json
    body:
      email: "{{ DEVELOPER_EMAIL_ACCOUNT }}-{{ item }}@{{ DEVELOPER_EMAIL_DOMAIN }}"
      firstName: "{{ DEVELOPER_FIRST_NAME }}-{{ item }}"
      lastName: "{{ DEVELOPER_LAST_NAME }}"
      userName: "{{ DEVELOPER_USER_NAME }}-{{ item }}"
  with_sequence: "start={{ START_POSITION }} end={{ LOAD_COUNT }}"
  async: 3600
  poll: 0
  register: dev_creator

- name: Resync after creation of sample developers
  async_status:
    jid: "{{ dev_creater.ansible_job_id }}"
  register: dev_creator_result
  until: dev_creator_result.finished
  retries: "{{ (LOAD_COUNT / 4) }}"
  delay: ( 3600 * 4)

# Create Developer App - https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.developers.apps/create
- name: Create Apps
  uri:
    url: "{{ APIGEE_API_URI }}/v1/organizations/{{ ORG }}/developers/{{ DEVELOPER_EMAIL_ACCOUNT }}-{{ item }}@{{ DEVELOPER_EMAIL_DOMAIN }}/apps"
    method: POST
    status_code: [ '200','201','409' ]
    headers:
      Authorization: Bearer {{ GCLOUD_TOKEN }}
    body_format: json
    body:
      name: "{{ APP_NAME }}-{{ item }}"
      status: "{{ APP_STATUS }}"
      appFamily: "{{ APP_FAMILY }}"
      apiProducts:
        - "{{ PRODUCT_NAME }}"
  with_sequence: "start={{ START_POSITION }} end={{ LOAD_COUNT }}"
  async: 3600
  poll: 0

# Create Developer App Key - https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.developers.apps.keys/create
- name: Create Developer App Key
  uri:
    url: "{{ APIGEE_API_URI }}/v1/organizations/{{ ORG }}/developers/{{ DEVELOPER_EMAIL_ACCOUNT }}-{{ item }}@{{ DEVELOPER_EMAIL_DOMAIN }}/apps/{{ APP_NAME }}-{{ item }}/keys"
    method: POST
    status_code: [ '200','201','409' ]
    headers:
      Authorization: Bearer {{ GCLOUD_TOKEN }}
    body_format: json
    body:
      name: "{{ APP_NAME }}-{{ item }}"
      consumerKey: "{{ item }}"
      consumerSecret: "{{ item }}"
      status: "{{ APP_STATUS }}"
  with_sequence: "start={{ START_POSITION }} end={{ LOAD_COUNT }}"
  async: 3600
  poll: 0


# Add API Product to Developer App Key - https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.developers.apps.keys/updateDeveloperAppKey#google.cloud.apigee.v1.DeveloperAppKeys.UpdateDeveloperAppKey
- name: Add API Product to Developer App Key
  uri:
    url: "{{ APIGEE_API_URI }}/v1/organizations/{{ ORG }}/developers/{{ DEVELOPER_EMAIL_ACCOUNT }}-{{ item }}@{{ DEVELOPER_EMAIL_DOMAIN }}/apps/{{ APP_NAME }}-{{ item }}/keys/{{ item }}?action={{ APP_STATUS }}"
    method: POST
    status_code: [ '200','201','409' ]
    headers:
      Authorization: Bearer {{ GCLOUD_TOKEN }}
    body_format: json
    body:
      apiProducts:
        - "{{ PRODUCT_NAME }}"
      consumerKey: "{{ item }}"
      consumerSecret: "{{ item }}"
      name: "{{ APP_NAME }}-{{ item }}"
      status: "{{ APP_STATUS }}"
    with_sequence: "start={{ START_POSITION }} end={{ LOAD_COUNT }}"
    async: 3600
    poll: 0