---
- name: Create istio-system namespance
  shell: kubectl create namespace istio-system --kubeconfig={{ CLUSTER_KUBECONFIG }}
  register: status
  failed_when:
    - status.rc == 1
    - "'already exists' not in status.stderr"

- name: Cache istiod-service file name
  set_fact:
    cacheable: yes
    ISTIOD_SERVICE_FILE_PATH: "{{ WORK_DIR }}/istiod-service-{{ ISTIO_ASM_REVISION }}.yaml"

- name: Create ASM istiod-service.yaml template
  template:
    src: istiod-service.yaml.template
    dest: "{{ ISTIOD_SERVICE_FILE_PATH }}"

- name: Set asm-multicloud profile
  shell: |
    istioctl install \
      --kubeconfig={{ CLUSTER_KUBECONFIG }} \
      --set profile=asm-multicloud \
      --set revision={{ ISTIO_ASM_REVISION }}

- name: Configure validating webhook for istiod
  shell: |
    kubectl apply \
      -f {{ ISTIOD_SERVICE_FILE_PATH }} \
      --kubeconfig={{ CLUSTER_KUBECONFIG }}

- name: Enable auto-injection
  shell: |
    kubectl label namespace istio-system \
      istio-injection- \
      istio.io/rev={{ ISTIO_ASM_REVISION }} \
      --overwrite \
      --kubeconfig={{ CLUSTER_KUBECONFIG }}

- name: Restart deployment
  shell: |
    kubectl rollout restart deployment \
      -n istio-system \
      --kubeconfig={{ CLUSTER_KUBECONFIG }}
