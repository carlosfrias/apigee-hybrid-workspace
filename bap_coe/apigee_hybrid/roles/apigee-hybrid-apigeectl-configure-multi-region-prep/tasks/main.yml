---
# tasks file for roles/apigee-hybrid-multi-region-prep
- name: Set cluster context
  shell: kubectx {{ CLUSTER_NAME_SEED }}
  
- name: Obtain Cassandra Seed Node IP
  shell: kubectl get pods -n apigee -l app=apigee-cassandra -o jsonpath="{$.items[0].status.podIP}"
  register: cassandra_seed_node

- name: Cache Cassandra Seed Node IP
  set_fact:
    cacheable: yes
    CASSANDRA_SEED_NODE_IP: "{{ cassandra_seed_node.stdout }}"

- name: Set cluster name seed context
  shell: kubectx {{ CLUSTER_NAME_SEED }}

- name: Export secret from seed region
  shell: kubectl -n cert-manager get secret apigee-ca -o yaml
  register: apigee_ca_secret

- name: Export namespaces from seed region
  shell: kubectl get namespace -o yaml
  register: apigee_namespace

- name: Store namespace to file
  copy:
    content: "{{ apigee_namespace.stdout }}"
    dest: "{{ WORK_DIR }}/apigee-namespaces.yml"

- name: Store secret to file
  copy:
    content: "{{ apigee_ca_secret.stdout }}"
    dest: "{{ WORK_DIR }}/apigee-ca.yml"

- name: Set cluster name context
  shell: kubectx {{ CLUSTER_NAME }}

#- name: Create cert-manager namespace
#  shell: kubectl create namespace cert-manager
#  register: status
#  failed_when:
#    - status.rc == 1
#    - "'already exists' not in status.stderr"

#- name: Clear existing secret  target region
#  ignore_errors: yes
#  shell: kubectl -n cert-manager delete -f "{{ WORK_DIR }}/apigee-ca.yml"

- name: Import namespace to target region
  ignore_errors: yes
  shell: kubectl apply -f "{{ WORK_DIR }}/apigee-namespaces.yml"

- name: Import secret to target region
  ignore_errors: yes
  shell: kubectl -n cert-manager apply -f "{{ WORK_DIR }}/apigee-ca.yml"

- name: Delete pvc
  shell: kubectl -n apigee delete pvc --all
  args:
    chdir: "{{ APIGEECTL_DIR }}"

- name: Delete Apigee
  ignore_errors: yes
  shell: ./apigeectl delete -f {{ OVERRIDE_FILE }}
  args:
    chdir: "{{ APIGEECTL_DIR }}"
