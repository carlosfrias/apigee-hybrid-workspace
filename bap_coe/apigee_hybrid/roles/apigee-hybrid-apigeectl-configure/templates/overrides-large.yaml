#
# This sample is a good starting point for high performance environments including pre-production, production etc.
# In addition to all the parameters in overrides-medium, customers can set parameters like encryption keys, passwords etc.
# Individual components have a min of two replicas.
#

# GCP project name where the org is provisioned.
gcp:
  projectID: "{{ PROJECT_ID }}"
  name: "{{ CLUSTER_NAME }}"
  region: "{{GCP_REGION }}"
# Apigee org name.
org: "{{ PROJECT_ID }}"
# Kubernetes cluster name details
k8sCluster:
  name: "{{ CLUSTER_NAME }}"
  region: "{{GCP_REGION }}"

# unique identifier for this installation.
instanceID: "{{ PROJECT_ID }}-{{ PROJECT_NUMBER }}"

# It is the best practice to schedule Cassandra workloads on the separate nodes.
# This configuration allows you to specify labels (or node pools) for runtime
# vs. Cassandra workloads.
nodeSelector:
  # This flag determines if the scheduling passes/fails if the labels are missing.
  requiredForScheduling: false
  apigeeRuntime:
    key: "cloud.google.com/gke-nodepool"
    value: "apigee-runtime"
  apigeeData:
    key: "cloud.google.com/gke-nodepool"
    value: "apigee-data"

virtualhosts:
  - name: "{{ ENV_GROUP }}"
    # either SSLSecret or the paths
    # sslSecret: "test-sslsecret"
    # Certificate for the domain name; this can be self signed.
    sslCertPath: "{{ SSL_CERT_PATH }}"
    # Private key for the domain name; this can be self signed.
    sslKeyPath: "{{ SSL_KEY_PATH }}"
    # optional
    # additionalGateways: ["name of the istio gateway, if in different ns, then ns/gatewayname"]

envs:
    # Apigee environment name.
  - name: "{{ ENV_NAME }}"
    # Service accounts for sync and UDCA.
    serviceAccountPaths:
      synchronizer: "{{ SERVICE_ACCOUNT_PATH_SYNCHRONIZER }}"
      udca: "{{ SERVICE_ACCOUNT_PATH_UDCA }}"
    # Set custom encryption keys for KMS.
    kmsEncryptionKey: "{{ KMS_ENCRYPTION_KEY }}"
    # Set custom encryption keys for KVM.
    kvmEncryptionKey: "{{ KVM_ENCRYPTION_KEY }}"
    # Set custom encryption keys for Cache.
    cacheEncryptionKey: "{{ CACHE_ENCRYPTION_KEY }}"

synchronizer:
  replicaCountMin: {{ SYNCHRONIZER_REPLICA_COUNT_MIN }}

runtime:
  replicaCountMin: {{ RUNTIME_REPLICA_COUNT_MIN }}
  replicaCountMax: {{ RUNTIME_REPLICA_COUNT_MAX }}
  resources:
    requests:
      cpu: {{ RUNTIME_RESOURCES_REQUESTS_CPU }}
      memory: {{ RUNTIME_RESOURCES_REQUESTS_MEMORY }}

cassandra:
  auth:
    default:
      password: "{{ CASSANDRA_AUTH_DEFAULT_PASSWORD }}"
    admin:
      password: "{{ CASSANDRA_AUTH_ADMIN_PASSWORD }}"
    ddl:
      password: "{{ CASSANDRA_AUTH_DDL_PASSWORD }}"
    dml:
      password: "{{ CASSANDRA_AUTH_DML_PASSWORD }}"
  replicaCount: {{ CASSANDRA_REPLICA_COUNT }}
  resources:
    requests:
      cpu: {{ CASSANDRA_RESOURCES_REQUESTS_CPU }}
      memory: {{ CASSANDRA_RESOURCES_REQUESTS_MEMORY }}
  maxHeapSize: {{ CASSANDRA_MAX_HEAP_SIZE }}
  heapNewSize: {{ CASSANDRA_HEAP_NEW_SIZE }}
  storage:
    # Create a storage class with SSD.
    storageClass: "{{ CASSANDRA_STORAGE_STORAGECLASS }}"
    capacity: "{{ CASSANDRA_STORAGE_CAPACITY }}"
{% if CASSANDRA_SEED_NODE_IP is defined and CASSANDRA_SEED_NODE_IP | length > 0 %}
  multiRegionSeedHost: {{ CASSANDRA_SEED_NODE_IP }}
  datacenter: {{ CASSANDRA_DATA_CENTER_NAME }}
  rack: {{ CASSANDRA_RACK_NAME }}
{% endif %}    

udca:
  replicaCountMin: {{ UDCA_REPLICA_COUNT_MIN }}
  resources:
    requests:
      cpu: {{ UDCA_RESOURCES_REQUESTS_CPU }}
      memory: {{ UDCA_RESOURCES_REQUESTS_MEMORY }}

mart:
  replicaCountMin: {{ MART_REPLICA_COUNT_MIN }}
  replicaCountMax: {{ MART_REPLICA_COUNT_MAX }}
  serviceAccountPath: "{{ SERVICE_ACCOUNT_PATH_MART }}"
  resources:
    requests:
      cpu: {{ DEFAULT_MART_RESOURCES_REQUESTS_CPU }}
      memory: {{ DEFAULT_MART_RESOURCES_REQUESTS_MEMORY }}

metrics:
  serviceAccountPath: "{{ SERVICE_ACCOUNT_PATH_METRICS }}"

connectAgent:
  replicaCountMin: {{ CONNECT_AGENT_REPLICA_COUNT_MIN }}
  serviceAccountPath: "{{ SERVICE_ACCOUNT_PATH_CONNECT_AGENT }}"

watcher:
  serviceAccountPath: "{{ SERVICE_ACCOUNT_PATH_WATCHER }}"
