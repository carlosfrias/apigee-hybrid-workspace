---
# Attributes to be set in a protected credentials file not stored with scripts
#ADMIN_ACCOUNT_USER: "PROVIDED_IN_CREDENTIALS_YML"
#GCLOUD_ORG_DOMAIN: "PROVIDED_IN_CREDENTIALS_YML"
#BILLING_ID: "PROVIDED_IN_CREDENTIALS_YML"
#GCLOUD_ORG_ID: "PROVIDED_IN_CREDENTIALS_YML"

PROJECT_ID: "friasc-hybrid-20231214-1645"

# SERVICE_ACCOUNT_PROTECTED_VALUES in credentials.yml
ADMIN_ACCOUNT_EMAIL: "{{ ADMIN_ACCOUNT_USER }}@{{ GCLOUD_ORG_DOMAIN }}"
BILLING_USER_NAME: "{{ ADMIN_ACCOUNT_USER }}"
BILLING_USER_EMAIL: "{{ BILLING_USER_NAME }}@{{ GCLOUD_ORG_DOMAIN }}"
APIGEE_NON_PROD_USER: "apigee-non-prod"
APIGEE_ADMIN: "apigee-admin"
PROJECT_SERVICE_ACCOUNT_FQ_NAME_SUFFIX: "@{{ PROJECT_ID }}.iam.gserviceaccount.com"
APIGEE_ADMIN_SERVICE_ACCOUNT: "{{ APIGEE_ADMIN }}{{ PROJECT_SERVICE_ACCOUNT_FQ_NAME_SUFFIX }}"
ADMIN_SERVICE_ACCOUNT_NAME: "{{ ADMIN_ACCOUNT_USER }}"
ADMIN_SERVICE_ACCOUNT: "{{ ADMIN_SERVICE_ACCOUNT_NAME }}{{ PROJECT_SERVICE_ACCOUNT_FQ_NAME_SUFFIX }}"
SERVICE_ACCOUNT_SCOPE: "non-prod"
AUTHORIZATION_KIND: serviceaccount

# Setting Working Directories and Paths
WORK_DIR: "{{ playbook_dir | dirname | dirname }}/work_dir/{{ PROJECT_ID }}"
WORKDIR_DOWNLOAD_DEST: "{{ WORK_DIR }}/downloads"
WORKDIR_BINARY_DEST: "{{ WORK_DIR }}/bin"
HYBRID_FILES_DIR: "{{ WORK_DIR }}/apigeectl-{{ APIGEE_VERSION }}/hybrid-files"
CERT_FILE_DIR: "{{ HYBRID_FILES_DIR  }}/certs"
APIGEE_OVERRIDE_TEMPLATE: "non-prod"
OVERRIDE_FILE: "{{ HYBRID_FILES_DIR }}/overrides/overrides-{{ APIGEE_OVERRIDE_TEMPLATE | default('non-prod') }}.yaml"
HELM_OVERRIDE_FILE: "{{ APIGEE_HYBRID_HELM_CHARTS_DIR }}/{{ OVERRIDE_FILE | basename }}"
APIGEE_SERVICE_ACCOUNTS_DIR: "{{ HYBRID_FILES_DIR }}/service-accounts"
APIGEE_HYBRID_HELM_CHARTS_DIR: "{{ HYBRID_FILES_DIR }}/apigee-hybrid-helm-charts"
HELM_CERT_FILE_DIR: "{{ APIGEE_HYBRID_HELM_CHARTS_DIR }}/certs"
SERVICE_ACCOUNT_FILE_SUFFIX: "service-account-key"
SERVICE_ACCOUNT_FILE: "{{ ADMIN_SERVICE_ACCOUNT_NAME }}-{{ SERVICE_ACCOUNT_FILE_SUFFIX }}.json"
#SERVICE_ACCOUNT_FILE_PATH: "{{ WORK_DIR }}/credentials/{{ SERVICE_ACCOUNT_FILE }}"
CREDENTIALS_DIR: "{{ WORK_DIR }}/credentials"

HELM_VERSION: 3.11.1
HELM_BASE_URL: https://get.helm.sh
HELM_INSTALLATION_ARCHIVE_NAME: helm-v{{ HELM_VERSION }}-{{ ansible_system | lower }}-{{ facter_os.architecture }}.tar.gz
HELM_URL: "{{ HELM_BASE_URL }}/{{ HELM_INSTALLATION_ARCHIVE_NAME }}"
HELM_URL_CHECKSUM: "{{ HELM_URL }}.sha256sum"
HELM_BINARY: "{{ WORKDIR_BINARY_DEST }}/helm"
#APIGEE_HYBRID_HELM_CHART_REPO:  sso://edge-internal/apigee-hybrid-helm-charts
APIGEE_HYBRID_HELM_CHART_REPO:  oci://us-docker.pkg.dev/apigee-release/apigee-hybrid-helm-charts
APIGEE_HYBRID_HELM_CHART_REPO_DEST: "{{ WORK_DIR }}/{{ APIGEE_HYBRID_HELM_CHART_REPO | basename }}"
APIGEE_HYBRID_HELM_CHART_VERSION: 1.10.3
NAMESPACE: apigee
APIGEE_HYBRID_CHART_LIST:
- apigee-operator
- apigee-datastore
- apigee-env
- apigee-telemetry
- apigee-org
- apigee-ingress-manager
- apigee-redis
- apigee-virtualhost

GCP_ZONE: "us-east1-b"
GCP_REGION: "us-east1"
REGION: "{{ GCP_REGION }}"
REGION_SEED: "{{ GCP_REGION }}"
ANALYTICS_REGION: "{{ GCP_REGION }}"
RUNTIMETYPE: "HYBRID"
ORG_CREATE_TIMEOUT: 90
APIGEECTL_CMD_TIMEOUT: 60
GKE_CLUSTER_CREATE_TIMEOUT: 120

INGRESS_GATEWAYS_REPLICA_COUNT_MIN:  1
INGRESS_GATEWAYS_REPLICA_COUNT_MAX: 2
INGRESS_GATEWAY_NAME: apigee-ingress # 17 char limit
DISABLE_ISTIO_CONFIG_IN_API_SERVER: true
APIGEE_HYBRID_LOGGER_ENABLED: false

APIGEE_VERSION: 1.11.0
ISTIO_VERSION: 1.18
ISTIO_VERSION_REVISION: "asm.8"
ISTIO_VERSION_MAJOR: "{{ ISTIO_VERSION.split('.')[0] }}.{{ ISTIO_VERSION.split('.')[1] }}"
ISTIO_VERSION_MINOR: "{{ ISTIO_VERSION.split('.')[2] }}"
ASM_KPT_VERSION: "{{ ISTIO_VERSION_MAJOR }}-asm"
CLUSTER_SEED: 1
CLUSTER_VERSION: 1.27.3-gke.100

CERT_MANAGER_VERSION: 1.13.2
KUBECTL_VERSION: 1.26
KUBECTL_DOWNLOAD_URL: https://github.com/cert-manager/cert-manager/releases/download
#KUBECTL_DOWNLOAD_URL: https://github.com/jetstack/cert-manager/releases/download

VPC_NETWORK_NAME: default
VPC_SUBNETWORK_NAME: default

# DNS Config Attributes
DNS_PROJECT_ID: "friasc-apigee-lab"
DNS_MANAGED_ZONE: "friasc.demo.altostrat.com"
DNS_ZONE_NAME: "friasc-demo"
DOMAIN_SUFFIX: "{{ PROJECT_ID }}"
#DOMAIN_NAME: "{{ PROJECT_ID }}-{{ ENVIRONMENT_NAME }}.{{ DNS_MANAGED_ZONE }}"
DOMAIN_NAME: "{{ DNS_MANAGED_ZONE }}"
SSL_CERT_PATH: "{{ CERT_FILE_DIR }}/keystore-{{ ENVIRONMENT_GROUP_NAME }}.pem"
SSL_KEY_PATH: "{{ CERT_FILE_DIR }}/keystore-{{ ENVIRONMENT_GROUP_NAME }}.key"
CERT_SIGNING_REQUEST_PATH: "{{ CERT_FILE_DIR }}/keystore-{{ ENVIRONMENT_GROUP_NAME }}.csr"
EXTERNAL_IP_NAME: "external-ip-apigee-ingress-for-{{ CLUSTER_NAME }}"

#PROVIDED_PUBLIC_CERT: "{{ '~' | expanduser }}/.ssh/hybrid-apigee.net/demo-cert.pem"
#PROVIDED_PRIVATE_KEY: "{{ '~' | expanduser }}/.ssh/hybrid-apigee.net/demo-cert.key"
#FOLDER_DISPLAY_NAME: apigee-hybrid
APIGEE_NON_PROD_ROLE_BINDINGS:
- "roles/apigee.admin"
- "roles/apigee.runtimeAgent"
- "roles/apigee.synchronizerManager"
- "roles/apigee.analyticsAgent"
- "roles/apigeeconnect.Agent"
- "roles/logging.logWriter"
- "roles/monitoring.metricWriter"
- "roles/storage.objectAdmin"
- "roles/iam.serviceAccountAdmin"

CLUSTER_CHECK_DIR: "{{ HYBRID_FILES_DIR }}/cluster-check"
CLUSTER_COUNT: "{{ CLUSTER_SEED }}"
#CLUSTER_NAME: "frias-apigee-hybrid-demo"
CLUSTER_NAME: "apigee-hybrid-{{ CLUSTER_COUNT }}"
FQ_CLUSTER_NAME: "gke_{{ PROJECT_ID }}_{{ CLUSTER_ZONE }}_{{ CLUSTER_NAME }}"
CLUSTER_ZONE: "{{ REGION }}-b"
CLUSTER_REGION: "{{ REGION }}"
MACHINE_TYPE: "e2-standard-8"
NODE_COUNT: 3
NODE_COUNT_MAX: 3
NODE_COUNT_MIN: 3
DISK_SIZE: 500
DISK_TYPE: pd-balanced
IMAGE_TYPE: COS_CONTAINED
RELEASE_CHANNEL: "regular"
CASSANDRA_DATA_CENTER_NAME: "dc-{{ CLUSTER_COUNT }}"
CASSANDRA_RACK_NAME: "ra-1"
CASSANDRA_HOST_NETWORK: false
CASSANDRA_REPLICA_COUNT: 1
LOGGING: "SYSTEM,WORKLOAD"
MONITORING: "SYSTEM"
CLUSTER_ADDONS: "HorizontalPodAutoscaling,HttpLoadBalancing,GcePersistentDiskCsiDriver"
NODE_POOL_NAME_LABEL_ATTRIBUTE: "cloud.google.com/gke-nodepool"
NODE_POOL_DATA_LABEL: "apigee-data"
NODE_POOL_RUNTIME_LABEL: "apigee-runtime"
NODE_POOL_DATA_LABEL_NAME: "cloud.google.com/gke-nodepool"
NODE_POOL_DATA_LABEL_VALUE: "True"
NODE_POOL_RUNTIME_LABEL_NAME: "cloud.google.com/gke-nodepool"
NODE_POOL_RUNTIME_LABEL_VALUE: "True"
MAX_SURGE_UPGRADE: 1
MAX_UNAVAILABLE_UPGRADE: 0

VALIDATE_PROJECT_ID: "{{ PROJECT_ID }}"
VALIDATE_PROXY_URI_ENDPOINT: /notarget
VALIDATE_PROXY_IP: "{{ INGRESS_IP }}"
VALIDATE_PROXY_PORT: 443

GCLOUD_FOLDER_ROLE_BINDINGS:
  - roles/resourcemanager.folderAdmin

GCLOUD_PROJECT_SERVICES:
  - "apigee.googleapis.com"
  - "apigeeconnect.googleapis.com"
  - "cloudresourcemanager.googleapis.com"
  - "compute.googleapis.com"
  - "container.googleapis.com"
  - "pubsub.googleapis.com"
#  - "iam.googleapis.com"
#  - "storage.googleapis.com"
#  - "servicenetworking.googleapis.com"
#  - "serviceusage.googleapis.com"
#  - "stackdriver.googleapis.com"
#  - "meshca.googleapis.com"
#  - "meshtelemetry.googleapis.com"
#  - "meshconfig.googleapis.com"
#  - "iamcredentials.googleapis.com"
#  - "anthos.googleapis.com"
#  - "gkeconnect.googleapis.com"
#  - "gkehub.googleapis.com"
#  - "sourcerepo.googleapis.com"
#  - "cloudbuild.googleapis.com"
#  - "secretmanager.googleapis.com"
#  - "dns.googleapis.com"
#  - "monitoring.googleapis.com"
#  - "logging.googleapis.com"
#  - "cloudtrace.googleapis.com"
#  - "privateca.googleapis.com"

GCLOUD_ORG_ROLE_BINDINGS:
  - "roles/owner"
  - "roles/billing.admin"
  - "roles/billing.projectManager"
  - "roles/iam.serviceAccountAdmin"
  - "roles/iam.serviceAccountKeyAdmin"
  - "roles/iam.serviceAccountUser"
  - "roles/iam.serviceAccountViewer"
  - "roles/resourcemanager.projectIamAdmin"
  - "roles/resourcemanager.organizationAdmin"
  - "roles/serviceusage.serviceUsageAdmin"
  - "roles/serviceusage.serviceUsageViewer"
  - "roles/serviceusage.apiKeysAdmin"
  - "roles/iap.tunnelResourceAccessor"
  - "roles/compute.networkUser"
  - "roles/compute.instanceAdmin"
  - "roles/compute.loadBalancerAdmin"
  - "roles/networkmanagement.admin"
  - "roles/networkmanagement.viewer"

#  Configure project admin role bindings
GCLOUD_PROJECT_ADMIN_ROLE_BINDINGS:
  - "roles/resourcemanager.projectDeleter"
  - "roles/resourcemanager.projectCreator"
  - "roles/iam.serviceAccountAdmin"
  - "roles/iam.serviceAccountKeyAdmin"

ADMIN_SERVICE_ACCOUNT_ROLE_BINDINGS:
  - "roles/apigee.admin"
  - "roles/apigee.runtimeAgent"
  - "roles/apigee.synchronizerManager"
  - "roles/apigeeconnect.Agent"
  - "roles/compute.admin"
  - "roles/compute.instanceAdmin"
  - "roles/compute.loadBalancerAdmin"
  - "roles/compute.networkAdmin"
  - "roles/compute.networkUser"
  - "roles/cloudkms.admin"
  - "roles/iam.serviceAccountAdmin"
  - "roles/iam.serviceAccountKeyAdmin"
  - "roles/iam.serviceAccountUser"
  - "roles/iam.serviceAccountViewer"
  - "roles/iam.serviceAccountKeyAdmin"
  - "roles/iam.workloadIdentityUser"
  - "roles/iam.serviceAccountAdmin"
  - "roles/logging.logWriter"
  - "roles/networkmanagement.admin"
  - "roles/networkmanagement.viewer"
  - "roles/monitoring.metricWriter"
  - "roles/owner"
  - "roles/pubsub.editor"
  - "roles/serviceusage.serviceUsageAdmin"
  - "roles/storage.objectAdmin"
  - "roles/gkehub.connect"

APIGEE_SERVICE_ACCOUNTS:
- "{{ APIGEE_NON_PROD_USER }}"
#  - apigee-metrics
#  - apigee-synchronizer
#  - apigee-udca
#  - apigee-mart
#  - apigee-cassandra
#  - apigee-logger
#  - apigee-watcher
#  - apigee-connect-agent


SERVICE_ACCOUNT_PATH_SYNCHRONIZER: "{{ HYBRID_FILES_DIR }}/service-accounts/{{ PROJECT_ID }}-apigee-non-prod.json"
SERVICE_ACCOUNT_PATH_UDCA: "{{ HYBRID_FILES_DIR }}/service-accounts/{{ PROJECT_ID }}-apigee-non-prod.json"
SERVICE_ACCOUNT_PATH_RUNTIME: "{{ HYBRID_FILES_DIR }}/service-accounts/{{ PROJECT_ID }}-apigee-non-prod.json"
SERVICE_ACCOUNT_PATH_MART: "{{ HYBRID_FILES_DIR }}/service-accounts/{{ PROJECT_ID }}-apigee-non-prod.json"
SERVICE_ACCOUNT_PATH_METRICS: "{{ HYBRID_FILES_DIR }}/service-accounts/{{ PROJECT_ID }}-apigee-non-prod.json"
SERVICE_ACCOUNT_PATH_CONNECT_AGENT: "{{ HYBRID_FILES_DIR }}/service-accounts/{{ PROJECT_ID }}-apigee-non-prod.json"
SERVICE_ACCOUNT_PATH_WATCHER: "{{ HYBRID_FILES_DIR }}/service-accounts/{{ PROJECT_ID }}-apigee-non-prod.json"
SERVICE_ACCOUNT_PATH_LOGGER: "{{ HYBRID_FILES_DIR }}/service-accounts/{{ PROJECT_ID }}-apigee-non-prod.json"

GCLOUD_ORG_POLICIES_CONSTRAINTS_ENFORCEMENT_DISABLE:
  - constraints/iam.disableServiceAccountKeyCreation
  - constraints/iam.disableServiceAccountCreation
  - constraints/compute.requireShieldedVm
  - constraints/compute.requireOsLogin
  - constraints/compute.skipDefaultNetworkCreation

GCLOUD_ORG_POLICIES_UPDATE:
  - constraints/compute.trustedImageProjects
  - constraints/compute.restrictSharedVpcSubnetworks
  - constraints/compute.restrictSharedVpcHostProjects
  - constraints/compute.restrictVpcPeering
  - constraints/compute.vmExternalIpAccess
  - constraints/compute.vmCanIpForward

GCP_SYSTEM_TOOLS:
  - gnupg2
  - ca-certificates
  - apt-transport-https
  - google-cloud-sdk-gke-gcloud-auth-plugin

SYSTEM_TOOLS:
  - 'rsync'
  - 'tree'
  - 'netcat'
  - 'kubectl'
  - 'docker-ce'
  - 'curl'
  - 'npm'
  - 'git'

GITHUB_DEVREL_URL: "https://github.com/apigee/devrel.git"
WORK_DIR_DEVREL: "{{ WORK_DIR }}/devrel"
WORK_DIR_SACKMESSER: "{{ WORK_DIR_DEVREL }}/tools/apigee-sackmesser"
WORK_DIR_SACKMESSER_BIN: "{{ WORK_DIR_SACKMESSER }}/bin/sackmesser"
WORK_DIR_COMMON_SHARED_FLOWS: "{{ WORK_DIR_DEVREL }}/references/common-shared-flows"
#WORK_DIR_COMMON_SHARED_FLOWS_BIN: "{{ WORK_DIR_COMMON_SHARED_FLOWS }}/deploy.sh"
WORK_DIR_PROXY_TEMPLATE: "{{ WORK_DIR_DEVREL }}/references/proxy-template"
#WORK_DIR_PROXY_TEMPLATE_BIN: "{{ WORK_DIR_PROXY_TEMPLATE }}/generate-proxy.sh"

APIGEE_ORG: "{{ PROJECT_ID }}"
ENVIRONMENT_NAME: "test"
ENVIRONMENT_GROUP_NAME: "{{ ENVIRONMENT_NAME }}-group"
APIGEE_HOSTNAME: ""
