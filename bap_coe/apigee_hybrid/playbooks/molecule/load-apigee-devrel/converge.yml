---
- name: Apigee Test Proxy Installation
  hosts: localhost
  connection: local

  vars_files:
  - ~/.apigee-secure/credentials.yml
  - "{{ playbook_dir | dirname | dirname }}/resources/defaults.yml"
  - "{{ playbook_dir | dirname | dirname }}/resources/override.yml"

  collections:
    - bap_coe.bootstrap_runtime
    - bap_coe.apigee_hybrid
    - bap_coe.gcp_management

  roles:
    - gcp_token_retrieval
#    - {
#        role: gcp_iam_policy_bindings_org,
#        ADMIN_ACCOUNT_EMAIL: "{{ ADMIN_SERVICE_ACCOUNT_EMAIL }}",
#        BINDING_OP: "add",
#        ROLE_BINDINGS: [
#          "{{ GCLOUD_ORG_ROLE_BINDINGS }}",
#          "{{ GCLOUD_FOLDER_ROLE_BINDINGS }}",
#          "{{ ADMIN_SERVICE_ACCOUNT_ROLE_BINDINGS }}"
#        ]
#    }
#    - { role: gcp_resource_manager_constraints_disable_enforce }
#    - { role: gcp_resource_manager_update_org_policy }
#    - { role: gcp_resource_manager_folders_create }
#    - { role: gcp_resource_manager_folders_get_folder_id }
#    - { role: gcp_resource_manager_folders_permissions_user }

  tasks:
    - name: Download devrel
      git:
        repo: "{{ GITHUB_DEVREL_URL }}"
        dest: "{{ WORK_DIR_DEVREL }}"

    - name: Validate that Sackmesser is available
      command: "{{ WORK_DIR_SACKMESSER_BIN }} help"

    - name: Deploy the required shared flows
      command: "{{ WORK_DIR_COMMON_SHARED_FLOWS }}/deploy.sh all --googleapi"
      environment:
        APIGEE_X_ORG: "{{ APIGEE_ORG }}"
        APIGEE_X_ENV: "{{ ENVIRONMENT_NAME }}"
        APIGEE_X_HOSTNAME: "{{ APIGEE_HOSTNAME }}"
        APIGEE_TOKEN: "{{ GCLOUD_TOKEN }}"

    - name: Generate the test proxy from the proxy template
      command: "./generate-proxy.sh --googleapi"
      environment:
        APIGEE_X_ORG: "{{ APIGEE_ORG }}"
        APIGEE_X_ENV: "{{ ENVIRONMENT_NAME }}"
        APIGEE_X_HOSTNAME: "{{ APIGEE_HOSTNAME }}"
        APIGEE_TOKEN: "{{ GCLOUD_TOKEN }}"
        PROXY: 'devrel-proxy-gen'
        VERSION: '1'
        VHOST: ' '
        TARGET_URL: 'https://mock.apigee.net/echo'
      args:
        chdir: "{{ WORK_DIR_PROXY_TEMPLATE }}"

    - name: Deploy the generated proxies
      command: |
        {{ WORK_DIR_SACKMESSER_BIN }} deploy --googleapi \
        -o {{ APIGEE_ORG }} \
        -e {{ ENVIRONMENT_NAME }} \
        -t {{ GCLOUD_TOKEN }} \
        -h {{ APIGEE_HOSTNAME }} \
        -d ./devel-proxy-gen-1
      args:
        chdir: "{{ WORK_DIR_PROXY_TEMPLATE }}"
