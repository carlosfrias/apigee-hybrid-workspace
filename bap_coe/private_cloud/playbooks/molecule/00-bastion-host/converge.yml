---
- name: Provision project
  import_playbook: "{{ playbook_dir | dirname }}/02-provision-project/converge.yml"

- name: Update organization policies
  import_playbook: "{{ playbook_dir | dirname }}/03-config-org-policies/converge.yml"

- name: Update services api
  import_playbook: "{{ playbook_dir | dirname }}/04-enable-apis/converge.yml"

- name: Create service accounts
  import_playbook: "{{ playbook_dir | dirname }}/05-create-service-account/converge.yml"

- name: Create service account keys
  import_playbook: "{{ playbook_dir | dirname }}/06-create-service-account-keys/converge.yml"

- name: Update service account permissions
  import_playbook: "{{ playbook_dir | dirname }}/07-create-service-account-permissions/converge.yml"

- name: Update service account permissions
  import_playbook: "{{ playbook_dir | dirname }}/08-create-network-firewall-nat-multi-instances/converge.yml"

- name: Create GCP Bastion Host
  hosts: localhost
  connection: local

  vars_files:
  - ~/.apigee-secure/argolis-credentials.yml
  - "{{ playbook_dir | dirname | dirname }}/resources/defaults.yml"
  - "{{ playbook_dir | dirname | dirname }}/resources/override.yml"

  vars:
    ACCESS_TYPE: "ext"
    TARGET_TAGS: "default-allow-ssh"
    NAME_INSTANCE_PREFIX: bastion
    bastion_target_host_range: 10.142.*.*
    bastion_blockinfile_mark: "# {mark} {{ bastion_target_host_range }}  * ANSIBLE MANAGED BLOCK"
    bastion_host_name: bastion-1
    FIREWALL_NAME_SUFFIX: "bastion"

    PRIVATE_CLOUD_INSTANCES:
    - { node_type: bastion, count: 1, dc: 1, machine_type: 'n2-standard-2' }

    firewall_ports:
    - { allow_ports: [ '22' ], target_tags: "bastion-host" }

  collections:
    - bap_coe.bastion_host
    - bap_coe.gcp_management

  roles:
    - { role: service_account_file_processing }
    - { role: service_account_file_path }
    - { role: gce_bastion_host_create }
    - { role: gce_network_create }
    - { role: gce_firewall_create }
    - { role: gce_router_create }
    - { role: gce_router_nat_create }

  tasks:
  - name: Create planet instances
    include_tasks: "create-instance.yml"
    with_items: "{{ PRIVATE_CLOUD_INSTANCES }}"
    loop_control:
      loop_var: instance

