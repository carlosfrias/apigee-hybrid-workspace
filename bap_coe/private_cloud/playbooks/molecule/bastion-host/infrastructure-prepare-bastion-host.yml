---
- name: Create infrastructure for private cloud in GCP
  hosts: localhost
  connection: local

  vars_files:
    - ~/.apigee-secure/apigee-hybrid-sensitive-attributes.yml
    - attributes.yml

  collections:
    - bap_coe.gcp_management
#    - bap_coe.bootstrap_runtime
    - bap_coe.bastion_host

  vars:
    ROLE_BINDINGS: ["{{ FOLDER_ROLE_BINDINGS }}","{{ ORG_ROLE_BINDINGS }}","{{ PROJECT_ADMIN_ROLE_BINDINGS }}"]

  roles:
#    - {
#      role: gcp_iam_policy_bindings_org,
#        tags: ['user-roles'],
#        GCLOUD_ACCOUNT_EMAIL: "{{ GCLOUD_ACCOUNT_PROJECT_ADMIN_EMAIL }}"
#      }
#    - { role: gcp_iam_service_account_create, tags: [ 'service-account','roles','firewall'] }
    - { role: service_account_file_path, tags: [ 'service-account'] }
#    - { role: gcp_iam_policy_bindings_service_account, tags: ['roles'] }
    - { role: gce_network_create, tags: [ 'network','firewall' ] }
#    - { role: gce_firewall_create, tags: ['firewall'], FIREWALL_NAME: "{{ NAME_INSTANCE_PREFIX }}" }
    - { role: gcp_resource_manager_constraints_disable_enforce }
    - { role: gce_bastion_host_create, tags: ['bastion'], TARGET_TAGS: "default-control-server", ACCESS_TYPE: "int" }
#    - { role: gce_tunnel_through_iap, tags: ['iap'] }

  vars:
    NAME_INSTANCE_PREFIX: "controller"
#    PRIVATE_CLOUD_INSTANCES:
#      - { node_type: aio, count: 1, dc: 1, machine_type: 'n2-standard-16', access_type: 'int' }
    firewall_ports:
      - { ports: "{{ aio_ports }}", port_type: 'bastion' }
#
#  tasks:
#    - name: Create planet instances
#      include_tasks: create-instance.yml
#      with_items: "{{ PRIVATE_CLOUD_INSTANCES }}"
#      loop_control:
#        loop_var: instance


- name: Update runtime environment of instances
  hosts: edge
  gather_facts: yes
  tags: ['python','infra']

  collections:
    - bap_coe.bootstrap_runtime

  roles:
    - python_install_minimal
