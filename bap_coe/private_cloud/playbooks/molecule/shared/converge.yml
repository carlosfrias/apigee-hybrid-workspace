---
- name: Create infrastructure for private cloud in GCP
  hosts: localhost
  connection: local

  vars_files:
  - ~/.apigee-secure/argolis-credentials.yml
  - "{{ playbook_dir | dirname | dirname }}/resources/defaults.yml"
  - "{{ playbook_dir | dirname | dirname }}/resources/override.yml"

  collections:
    - bap_coe.gcp_management
    - bap_coe.bootstrap_runtime

  roles:
  - { role: gcp_resource_manager_folders_get_folder_id }
  - {
      role: gcp_project_services_enable,
      tags: ['services'],
      ADMIN_ACCOUNT_EMAIL: "{{ ADMIN_ACCOUNT_EMAIL }}"
    }
  - { role: gcp_resource_manager_constraints_disable_enforce }
  - { role: gcp_resource_manager_update_org_policy }
  - { role: service_account_file_path }
  - { role: gcp_iam_service_account_create }
  - {
      role: gcp_iam_policy_bindings,
      BINDING_OP: "add",
      ACCOUNT_TYPE: "serviceAccount",
      GCLOUD_BINDING_ACCOUNT: "{{ GCLOUD_SERVICE_ACCOUNT}}",
      POLICY_BINDINGS: "{{ GCLOUD_PROJECT_SERVICE_ACCOUNT_ROLE_BINDINGS }}",
      ADMIN_ACCOUNT_EMAIL: "{{ ADMIN_ACCOUNT_EMAIL }}"
    }
  - { role: gcp_iam_service_account_keys }
  - { role: service_account_file_processing }
  - { role: gcp_auth_service_account_activate }
  - { role: gce_dynamic_inventory_configure }


    #- name: Update runtime environment of instances
    #  hosts: edge
    #  gather_facts: yes
    #  tags: ['python','infra']
    #
    #  collections:
    #    - bap_coe.bootstrap_runtime
    #
    #  roles:
    #    - python_install_minimal

#  tasks:
#    - name: Create planet instances
#      include_tasks: create-instance.yml
#      with_items: "{{ PRIVATE_CLOUD_INSTANCES }}"
#      loop_control:
#        loop_var: instance

#    - name: Next Step
#      debug:
#        msg: "This scenario created the project and dynamic infrastructure inventory. Please use one of the next scenarios to complete your deployment"
