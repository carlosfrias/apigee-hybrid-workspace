---
dependency:
  name: galaxy
driver:
  name: gce
  plugin: gcp_compute
  project_id: friasc-opdk-08022022-1409  # if not set, will default to env GCE_PROJECT_ID
  auth_kind: serviceaccount  # set to machineaccount or serviceaccount or application - if set to null will read env GCP_AUTH_KIND
  region: us-east1  # REQUIRED
  #  subnetwork_name: my-subnet  # specify if other than default
  #  vpc_host_project: null  # if you use a shared vpc, set here the vpc host project. In that case, your GCP user needs the necessary permissions in the host project, see https://cloud.google.com/vpc/docs/shared-vpc#iam_in_shared_vpc
  username: admin_ # used to connect with ssh to the GCE instance, will default to 'molecule'

  # set to the path to the JSON credentials file - if set to null, will default to env GCP_SERVICE_ACCOUNT_FILE
  service_account_file: /usr/local/google/home/friasc/apigee-workspace/apigee-hybrid-workspace/bap_coe/private_cloud/playbooks/work_dir/friasc-opdk-08022022-1409/credentials/admin-service-account-service-account-key.json
  scopes:
  - "https://www.googleapis.com/auth/compute"  # will default to env GCP_SCOPES, https://www.googleapis.com/auth/compute is the minimum required scope.
  - "https://www.googleapis.com/auth/cloud-platform"
  external_access: false  # chose whether to create a public IP for the VM or not - default is private IP only
  instance_os_type: linux  # Either windows or linux. Will be considered linux by default. You can NOT mix Windows and Linux VMs in the same scenario.
lint: |
  set -e
  yamllint .
  ansible-lint
  flake8
platforms:
  - name: opdk-multi-node
provisioner:
  name: ansible
  ansible-args:
    - --inventory=${MOLECULE_PROJECT_DIRECTORY}/work_dir/${PROJECT_ID}/inventory/
  playbooks:
    destroy: destroy.yml
    create: create.yml
    converge: converge.yml
#    prepare: prepare.yml
inventory:
  links:
    hosts: ${MOLECULE_PROJECT_DIRECTORY}/work_dir/${PROJECT_ID}/inventory/
config_options:  
  defaults:
    host_key_checking: False
  inventory:
    enable_plugins: gcp_compute
  ssh_connection:
    pipelining: false
  
    #  config_options:
#    defaults:
#      interpreter_python: auto_silent
#      bin_ansible_callbacks: True
#      stdout_callback: yaml
#      stderr_callback: yaml
#      merge_multiple_cli_tags: True
#      display_args_to_stdout: True
#      timeout: 60
#      forks: 25
#      private_key_file: ~/.ssh/google_compute_engine
#      scp_if_ssh: True


#      callbacks_whitelist: profile_tasks, timer, yaml
#      local_tmp: ../../work_dir/${PROJECT_ID}/tmp
#      fact_caching_connection: ../../work_dir/${PROJECT_ID}/bap_coe_apigee_hybrid
#      fact_caching: jsonfile
#      gathering: smart
#      ansible_shell_type: sh
#      host_key_checking: False

verifier:
  name: ansible
#  log: True
#  config_options:
#    defaults:
#      interpreter_python: auto_silent
#      callbacks_enabled: profile_tasks, timer, yaml
#      local_tmp: ~/.ansible/tmp
#      fact_caching_connection: ~/.ansible/cache/bap_coe_apigee_hybrid
#      fact_caching: jsonfile
#      gathering: smart
#      merge_multiple_cli_tags: True
#      display_args_to_stdout: True
#      timeout: 60
#      bin_ansible_callbacks: True
#      stdout_callback: yaml
#      stderr_callback: yaml
#    ssh_connection:
#      pipelining: false
#      scp_if_ssh: True
#
