ENABLE_SYSTEM_CHECK={{ enable_system_check }}
HOSTIP=$(hostname -i)
MSIP={{ local_mgmt_ip }}
ADMIN_EMAIL="{{ opdk_user_email }}"
APIGEE_ADMINPW="{{ opdk_user_pass }}"
LICENSE_FILE={{ opdk_license_target_file_path }}

{% if region_num == "1" or region_num == "2" %}
USE_LDAP_REMOTE_HOST={{ use_opdk_ldap_remote_host }}
LDAP_TYPE="{{ opdk_ldap_type }}"
APIGEE_LDAPPW="{{ opdk_ldap_pass }}"
{% if opdk_ldap_type == "2" %}
LDAP_SID={{ opdk_ldap_sid }}
LDAP_PEER={{ opdk_ldap_peer }}
{% endif %}
{% if (use_opdk_ldap_remote_host is defined and use_opdk_ldap_remote_host | trim == 'y') or use_opdk_ldap_remote_host is not defined %}
LDAP_HOST={{ opdk_ldap_ip }}
LDAP_PORT={{ opdk_ldap_port }}
{% endif %}
{% endif %}

ENABLE_AX={{ opdk_enable_ax }}
MP_POD={{ opdk_mp_pod }}

REGION=dc-{{ region_num }}

USE_ZK_CLUSTER={{ opdk_use_zk_cluster }}
{# TODO: Build a module to construct the ZK_HOSTS value#}
ZK_HOSTS="{% for host in groups['ds'] %}{{ hostvars[host]['private_address'] }}{% if hostvars[host]['zk_observer'] is defined and hostvars[host]['zk_observer'] == 'true' %}:observer{% endif %}{% if not loop.last %} {% endif %}{% endfor %}"

{# TODO: Build a module to construct the ZK_CLIENT_HOSTS value#}
{% if groups['dc_1_edge'] is defined and inventory_hostname in groups['dc_1_edge'] %}
ZK_CLIENT_HOSTS="{% for host in groups['dc_1_ds'] %}{{ hostvars[host]['private_address'] }}{% if not loop.last %} {% endif %}{% endfor %}"
{% elif groups['dc_2_edge'] is defined and inventory_hostname in groups['dc_2_edge']%}
ZK_CLIENT_HOSTS="{% for host in groups['dc_2_ds'] %}{{ hostvars[host]['private_address'] }}{% if not loop.last %} {% endif %}{% endfor %}"
{% elif groups['dc_3_edge'] is defined and inventory_hostname in groups['dc_3_edge']%}
ZK_CLIENT_HOSTS="{% for host in groups['dc_3_ds'] %}{{ hostvars[host]['private_address'] }}{% if not loop.last %} {% endif %}{% endfor %}"
{% elif groups['dc_4_edge'] is defined and inventory_hostname in groups['dc_4_edge']%}
ZK_CLIENT_HOSTS="{% for host in groups['dc_4_ds'] %}{{ hostvars[host]['private_address'] }}{% if not loop.last %} {% endif %}{% endfor %}"
{% elif groups['dc_5_edge'] is defined and inventory_hostname in groups['dc_5_edge']%}
ZK_CLIENT_HOSTS="{% for host in groups['dc_5_ds'] %}{{ hostvars[host]['private_address'] }}{% if not loop.last %} {% endif %}{% endfor %}"
{% elif groups['dc_6_edge'] is defined and inventory_hostname in groups['dc_6_edge']%}
ZK_CLIENT_HOSTS="{% for host in groups['dc_6_ds'] %}{{ hostvars[host]['private_address'] }}{% if not loop.last %} {% endif %}{% endfor %}"
{% elif groups['dc_7_edge'] is defined and inventory_hostname in groups['dc_7_edge']%}
ZK_CLIENT_HOSTS="{% for host in groups['dc_7_ds'] %}{{ hostvars[host]['private_address'] }}{% if not loop.last %} {% endif %}{% endfor %}"
{% elif groups['dc_8_edge'] is defined and inventory_hostname in groups['dc_8_edge']%}
ZK_CLIENT_HOSTS="{% for host in groups['dc_8_ds'] %}{{ hostvars[host]['private_address'] }}{% if not loop.last %} {% endif %}{% endfor %}"
{% elif groups['dc_9_edge'] is defined and inventory_hostname in groups['dc_9_edge']%}
ZK_CLIENT_HOSTS="{% for host in groups['dc_9_ds'] %}{{ hostvars[host]['private_address'] }}{% if not loop.last %} {% endif %}{% endfor %}"
{% else %}
ZK_CLIENT_HOSTS="{% for host in groups['ds'] %}{{ hostvars[host]['private_address'] }}{% if not loop.last %} {% endif %}{% endfor %}"
{% endif %}

USE_CASS_CLUSTER={{ opdk_use_cass_cluster }}
CASS_HOSTS="{{ cassandra_hosts }}"
CASS_USERNAME={{ opdk_cass_username }}
CASS_PASSWORD="{{ opdk_cass_password }}"
CASS_AUTH={{ opdk_cass_auth }}

SMTPMAILFROM="{{ opdk_smtp_mail_from }} <{{  opdk_user_email }}>"

SKIP_SMTP={{ opdk_smtp_skip }}
{% if opdk_smtp_skip | trim == 'n' %}
SMTPHOST={{ opdk_smtp_host | default('smtp.gmail.com') }}
SMTPPORT={{ opdk_smtp_port | default('25') }}
{% if opdk_smtp_user is defined and opdk_smtp_user | trim | length > 0 %}
SMTPUSER={{ opdk_smtp_user }}
{% endif %}
{% if opdk_smtp_password is defined and opdk_smtp_password | trim | length > 0 %}
SMTPPASSWORD="{{ opdk_smtp_password }}"
{% endif %}
SMTPSSL={{ opdk_smtp_ssl | default('n') }}
{% endif %}
{% if opdk_version is version_compare('4.17.09', '<') %}
BIND_ON_ALL_INTERFACES={{ opdk_bind_on_all_interfaces | default('y') }}
{% endif %}

{% if region == "dc_1" or region == "dc_2" %}

{% if pgmaster_ip is defined and pgmaster_ip | trim | length > 0 and pgstandby_ip is defined and pgstandby_ip | trim | length > 0 %}
PG_MASTER={{ pgmaster_ip }}
PG_STANDBY={{ pgstandby_ip }}
{% endif %}
PG_PWD="{{ pg_pass }}"
{% endif %}

{% if opdk_monetization is defined and opdk_monetization | bool == True %}
# Monetization has been configured
PG_USER={{ pg_user }}
{% if pgmaster_ip is defined  %}
MO_PG_HOST={{ pgmaster_ip }}
{%  elif pg_ip is defined %}
MO_PG_HOST={{ pg_ip }}
{% endif %}
MO_PG_USER={{ pg_user }}
MO_PG_PASSWD="{{ pg_pass }}"
CASS_CLUSTERNAME={{ opdk_cass_clustername | default('Apigee') }}
APIGEE_PORT_HTTP_MS={{ ms_ext_mgmt_port | default('8080') }}
{% if groups['dc_1_qpid'] is defined and inventory_hostname in groups['dc_1_qpid'] %}
QPID_HOST="{{  groups['dc_1_qpid'] | join(' ') }}"
{% elif groups['dc_2_qpid'] is defined and inventory_hostname in groups['dc_2_qpid'] %}
QPID_HOST="{{  groups['dc_2_qpid'] | join(' ') }}"
{% endif %}
QPID_PORT={{ qpid_ext_mgmt_port | default('8083') }}
MX_GROUP={{ mxgroup | default('mxgroup') }}
ORG_NAME={{ org_name }}
{% endif %}
