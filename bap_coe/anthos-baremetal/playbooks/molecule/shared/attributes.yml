---
TERRAFORM_PROJECT_NAME: "baremetal1"
#PROJECT_ID: "friasc-{{ TERRAFORM_PROJECT_NAME | split('-') | join('') }}-05182022-1552"
PROJECT_ID: "friasc-anthosbm-05192022-1151"
ANSIBLE_PYTHON_INTERPRETER: /usr/local/google/home/friasc/.pyenv/shims/python3
WORK_DIR: "{{ playbook_dir | dirname | dirname }}/work_dir/{{ PROJECT_ID }}"
TOOLS_DIR: "{{ ansible_user_dir }}/bin"
INVENTORY_DIR: "{{ playbook_dir }}/inventory"

#GITHUB_REPO_URL: git@github.com:carlosfrias/terraform-modules.git
GITHUB_REPO_URL: git@github.com:carlosfrias/baremetal1.git
GITHUB_REPO_DEST: "{{ WORK_DIR }}/terraform-project/{{ TERRAFORM_PROJECT_NAME }}"
#TERRAFORM_PATH_PROJECT: "{{ GITHUB_REPO_DEST }}/samples/{{ TERRAFORM_PROJECT_NAME }}"
TERRAFORM_PATH_PROJECT: "{{ GITHUB_REPO_DEST }}"
TERRAFORM_PATH_BIN_DEST: "{{ TERRAFORM_PATH_PROJECT }}"
TERRAFORM_PATH_BIN: "{{ TERRAFORM_PATH_BIN_DEST }}/terraform"

TERRAFORM_LOG: "DEBUG"
TERRAFORM_LOG_PATH: "{{ WORK_DIR }}/logs"
TERRAFORM_LOG_FILE_NAME: "terraform-{{ PROJECT_ID }}.log"
NAME_INSTANCE_PREFIX: apigee-x
GCP_ZONE: us-east1-b
GCP_REGION: us-east1
CONTROL_SERVER_IMAGE_NAME: ops-server
CONTROL_SERVER_IMAGE_REPO_PATH: gcr.io/friasc-lab/{{ CONTROL_SERVER_IMAGE_NAME }}
ORG_BINDING_PROPAGATION_TIMEOUT: 100
ACCESS_TYPE: int
TIME_TO_PROPAGATE_BINDINGS: 2

AUTHORIZATION_KIND: serviceaccount
RESOURCE_GCP_ZONE: "us-central1-c"
MACHINE_TYPE: f1-micro
#MACHINE_TYPE: n1-standard-1
#MACHINE_TYPE: n2-highcpu-2
SCOPE_COMPUTE: "https://www.googleapis.com/auth/compute"
INSTANCE_NETWORK_TAG: "{{ NAME_INSTANCE_PREFIX }}-network-tag"

# Additional values for IMAGE_PROJECT: 'centos-cloud'
# Additional values for IMAGE_FAMILY: 'centos-7'
DISK_SOURCE_IMAGE: "projects/{{ IMAGE_PROJECT | default('ubuntu-os-cloud') }}/global/images/family/{{ IMAGE_FAMILY | default('ubuntu-1804-lts') }}"
DISK_NAME: "{{ NAME_INSTANCE_PREFIX }}-disk"
DISK_SIZE: 100

STARTUP_SCRIPT: |
  sudo apt update -y
  sudo apt install -y build-essential libssl-dev git zlib1g-dev
  sudo git clone https://github.com/giltene/wrk2.git /usr/local/src/wrk
  cd /usr/local/src/wrk
  make
  sudo cp /usr/local/src/wrk /usr/local/bin/

GCLOUD_FOLDER_ROLE_BINDINGS:
- roles/resourcemanager.folderAdmin

FOLDER_DISPLAY_NAME: apigeex
GCLOUD_ORG_ROLE_BINDINGS:
- "roles/owner"
- "roles/billing.admin"
- "roles/billing.projectManager"
- "roles/iam.serviceAccountAdmin"
- "roles/iam.serviceAccountKeyAdmin"
- "roles/resourcemanager.projectIamAdmin"
- "roles/resourcemanager.organizationAdmin"
- "roles/serviceusage.serviceUsageAdmin"
- "roles/serviceusage.serviceUsageViewer"
- "roles/serviceusage.apiKeysAdmin"
- "roles/iap.tunnelResourceAccessor"

#  Configure project admin role bindings
GCLOUD_PROJECT_ADMIN_ROLE_BINDINGS:
- "roles/resourcemanager.projectDeleter"
- "roles/resourcemanager.projectCreator"

GCLOUD_PROJECT_SERVICES:
- "compute.googleapis.com"
- "apigee.googleapis.com"
- "servicenetworking.googleapis.com"
- "cloudresourcemanager.googleapis.com"
- "serviceusage.googleapis.com"
- "iam.googleapis.com"
- "cloudkms.googleapis.com"
#- "container.googleapis.com"
#- "stackdriver.googleapis.com"
#- "meshca.googleapis.com"
#- "meshtelemetry.googleapis.com"
#- "meshconfig.googleapis.com"
#- "iamcredentials.googleapis.com"
#- "anthos.googleapis.com"
#- "gkeconnect.googleapis.com"
#- "gkehub.googleapis.com"
#- "sourcerepo.googleapis.com"
#- "cloudbuild.googleapis.com"
#- "secretmanager.googleapis.com"
#- "dns.googleapis.com"
#- "pubsub.googleapis.com"
#- "apigeeconnect.googleapis.com"
#- "monitoring.googleapis.com"
#- "logging.googleapis.com"
#- "cloudtrace.googleapis.com"
#- "privateca.googleapis.com"

GCLOUD_PROJECT_SERVICE_ACCOUNT_ROLE_BINDINGS:
- "roles/owner"
- "roles/compute.admin"
- "roles/compute.networkUser"
- "roles/compute.instanceAdmin"
- "roles/apigee.admin"
#- "roles/networkmanagement.admin"
#- "roles/networkmanagement.viewer"
#- "roles/iam.serviceAccountUser"
#- "roles/iam.serviceAccountAdmin"
#- "roles/iam.serviceAccountCreator"
#- "roles/iam.serviceAccountKeyAdmin"
#- "roles/compute.loadBalancerAdmin"

firewall_ports:
- { allow_ports: ['22'], port_name_suffix: 'control-server' }

GCLOUD_ORG_POLICIES_CONSTRAINTS_ENFORCEMENT_DISABLE:
- constraints/iam.disableServiceAccountKeyCreation
- constraints/iam.disableServiceAccountCreation
- constraints/compute.requireShieldedVm
- constraints/compute.requireOsLogin
- constraints/compute.skipDefaultNetworkCreation

GCLOUD_ORG_POLICIES_UPDATE:
- constraints/compute.trustedImageProjects
- constraints/compute.restrictSharedVpcSubnetworks
- constraints/compute.restrictSharedVpcHostProjects
- constraints/compute.restrictVpcPeering
- constraints/compute.restrictVpcPeering
- constraints/compute.vmExternalIpAccess
- constraints/compute.vmCanIpForward

variable_filename: "terraform.tfvars"
key_value_pairs:
- { key: "project_id", value: '"{{ PROJECT_ID }}"', separator: "=", type: "arg", file_name: "{{ TERRAFORM_PATH_PROJECT }}/{{ variable_filename }}" }
- { key: "region", value: '"{{ GCP_REGION }}"', separator: "=", type: "arg", file_name: "{{ TERRAFORM_PATH_PROJECT }}/{{ variable_filename }}" }
- { key: "zone", value: '"{{ GCP_ZONE }}"', separator: "=", type: "arg", file_name: "{{ TERRAFORM_PATH_PROJECT }}/{{ variable_filename }}" }
- { key: "credentials_file", value: '"{{ SERVICE_ACCOUNT_FILE_PATH }}"', separator: "=", type: "arg", file_name: "{{ TERRAFORM_PATH_PROJECT }}/{{ variable_filename }}" }

